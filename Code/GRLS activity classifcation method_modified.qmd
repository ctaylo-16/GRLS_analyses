---
title: "GRLS activity classifier"
format: html
editor: visual
---

# GRLS activity classification - modifiying activity score

Using paper method to change scoring system for activity: Development, factor structure and application of the Dog Obesity Risk and Appetite (DORA) questionnaire \[PeerJ\] - Raffan et al., 2015:

"Since both 4 and 5 option scales were used, items were scored as a percentage of the maximum to avoid 5 option scaled questions having a greater impact than 4 option scaled questions. Therefore, ‘never’ was assigned 0, ‘rarely’ 25, ‘sometimes’ 50, ‘often’ 75, and ‘always’ 100. Similarly, ‘not at all true’ was assigned 0, ‘somewhat true’ 33.3, ‘mainly true’ 66.6, and ‘definitely true’ 100.Where items within a factor invited opposite answers for the same dog, scores for the minority items were reversed. (For instance, within a theoretical factor about dog size, ‘true’ for ‘my dog is very small’ would score 100 as would ‘false’ for ‘my dog is very big’.) The working scores for the questionnaire were the individual factor scores, a combined ‘dog food-motivation score’, and a combined ‘owner management score’. Individual factor scores were calculated as percentages: = (sum of item scores for that factor)/(sum ofmaximum possible item scores for that factor) × 100."

Packages:

```{r}
library(tidyverse)
library(ggplot2)
library(lubridate)
```

Determine whether dogs are active or sedentary by incorporating the following activity datasets:

```{r}
#activity data from study y 1 and 2
activity_sy1_2 <- read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Data/activity_details_through_SY2.csv")
#check # dogs in it
act_1_2 <- unique(activity_sy1_2$subject_id)
#activity data from study y 3 + 
activity_sy3_beyond <- read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Data/activity_details_SY3_beyond.csv")
act_3_plus<- unique(activity_sy3_beyond$subject_id)
#activity overview dataset
activity_overview<- read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Data/activity_overview.csv")
act_over<-unique(activity_overview$subject_id)
```

-   Create an early life active vs sedentary variable (using datasets from first 2y study?/first 2y life)

-   Create rest of life active vs sedentary variable

-   Create an overall lifetime active vs sedentary variable

    -   Rather than time to cancer event just calculate until endpoint in study

Additionally use the dog details data to calculate values for first 2y of life:

```{r}
dog_enrollment<- read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Data/data version Feb 2024/dog_details.csv")
```

## Early life classifier

### Visualise data

Create plots of activity data to assess what has most variance and what thresholds might make sense to use:

-   what values exist in each column

```{r}
freq_table <- activity_sy1_2 %>%
  dplyr:: select(c(-"subject_id","year_in_study","record_date")) %>%
  dplyr::select(where(is.character)) %>%  # Select character columns
  pivot_longer(everything(), names_to = "column", values_to = "value") %>%
  count(column, value) %>%
  arrange(desc(n))
```

Based on this, there are in general \> several hundred values in each row for different categories except for the 'walk_reason_other_specify' which seems like quite messy free text:

```{r}
head(table(activity_sy1_2$walk_reason_other_specify))
```

Plots of:

-   Aerobic datasets involve dogs that are allowed time off leash - 50% of dogs have off-leash time so these Qs are only valid to half dataset

-   aerobic duration

```{r}
aero_duration <- activity_sy1_2 %>%
  dplyr::select(aerobic_duration) %>%
  # empty rows to recoded as not_record
   mutate(aerobic_duration= if_else(aerobic_duration == "", "not recorded", aerobic_duration))
  
# Create a long format dataframe for plotting
data_aero <- aero_duration %>%
  pivot_longer(cols = everything(), names_to = "variable", values_to = "value")

# Plot bar plots for each column
ggplot(data_aero, aes(x = value)) +
  geom_bar() +
  facet_wrap(~ variable, scales = "free", ncol = 5)+
  labs(title = "Aerobic duration ", x = "Category", y = "Count") 
```

-   aerobic frequency

```{r}
aero_freq <- activity_sy1_2 %>%
  dplyr::select(aerobic_frequency) %>%
  # empty rows to recoded as not_record
   mutate(aerobic_frequency= if_else(aerobic_frequency == "", "not recorded", aerobic_frequency))
  
# Create a long format dataframe for plotting
data_aero_f <- aero_freq %>%
  pivot_longer(cols = everything(), names_to = "variable", values_to = "value")

# Plot bar plots for each column
ggplot(data_aero_f, aes(x = value)) +
  geom_bar() +
  facet_wrap(~ variable, scales = "free", ncol = 5)+
  labs(title = "Aerobic freq ", x = "Category", y = "Count") 
```

-   aerobic pace

```{r}
aero_pace <- activity_sy1_2 %>%
  dplyr::select(aerobic_pace) %>%
  # empty rows to recoded as not_record
   mutate(aerobic_pace= if_else(aerobic_pace == "", "not recorded", aerobic_pace))
  
# Create a long format dataframe for plotting
data_aero_p <- aero_pace %>%
  pivot_longer(cols = everything(), names_to = "variable", values_to = "value")

# Plot bar plots for each column
ggplot(data_aero_p, aes(x = value)) +
  geom_bar() +
  facet_wrap(~ variable, scales = "free", ncol = 5)+
  labs(title = "Aerobic pace", x = "Category", y = "Count") 
```

-   fetch games frequency

```{r}
fetch_freq <- activity_sy1_2 %>%
  dplyr::select(fetch_games_frequency) %>%
  # empty rows to recoded as not_record
   mutate(fetch_games_frequency= if_else(fetch_games_frequency == "", "not recorded", fetch_games_frequency))
  
# Create a long format dataframe for plotting
data_fetch_f <- fetch_freq %>%
  pivot_longer(cols = everything(), names_to = "variable", values_to = "value")

# Plot bar plots for each column
ggplot(data_fetch_f, aes(x = value)) +
  geom_bar() +
  facet_wrap(~ variable, scales = "free", ncol = 5)+
  labs(title = "fetch freq ", x = "Category", y = "Count") 
```

-   walk without leash

```{r}
leash <- activity_sy1_2 %>%
  mutate(walk_without_leash=as.character(walk_without_leash))%>%
  dplyr::select(walk_without_leash) %>%
  # empty rows to recoded as not_record
   mutate(walk_without_leash= if_else(walk_without_leash == "", "not recorded", walk_without_leash))
  
# Create a long format dataframe for plotting
leash <- leash %>%
  pivot_longer(cols = everything(), names_to = "variable", values_to = "value")

# Plot bar plots for each column
ggplot(leash, aes(x = value)) +
  geom_bar() +
  facet_wrap(~ variable, scales = "free", ncol = 5)+
  labs(title = "walk without leash", x = "Category", y = "Count") 
```

-   walk duration

```{r}
walk_dur <- activity_sy1_2 %>%
  dplyr::select(walk_duration) %>%
  # empty rows to recoded as not_record
   mutate(walk_duration= if_else(walk_duration == "", "not recorded",walk_duration))
  
# Create a long format dataframe for plotting
walk_dur <- walk_dur %>%
  pivot_longer(cols = everything(), names_to = "variable", values_to = "value")

# Plot bar plots for each column
ggplot(walk_dur, aes(x = value)) +
  geom_bar() +
  facet_wrap(~ variable, scales = "free", ncol = 5)+
  labs(title = "walk duration ", x = "Category", y = "Count") 
```

-   walk pace

```{r}
walk_pace <- activity_sy1_2 %>%
  dplyr::select(walk_pace) %>%
  # empty rows to recoded as not_record
   mutate(walk_pace= if_else(walk_pace == "", "not recorded",walk_pace))
  
# Create a long format dataframe for plotting
walk_pace <- walk_pace %>%
  pivot_longer(cols = everything(), names_to = "variable", values_to = "value")

# Plot bar plots for each column
ggplot(walk_pace, aes(x = value)) +
  geom_bar() +
  facet_wrap(~ variable, scales = "free", ncol = 5)+
  labs(title = "walk pace ", x = "Category", y = "Count") 
```

-   walk frequency

```{r}
walk_freq <- activity_sy1_2 %>%
  dplyr::select(walk_frequency) %>%
  # empty rows to recoded as not_record
   mutate(walk_frequency= if_else(walk_frequency == "", "not recorded",walk_frequency))
  
# Create a long format dataframe for plotting
walk_freq <- walk_freq %>%
  pivot_longer(cols = everything(), names_to = "variable", values_to = "value")

# Plot bar plots for each column
ggplot(walk_freq, aes(x = value)) +
  geom_bar() +
  facet_wrap(~ variable, scales = "free", ncol = 5)+
  labs(title = "walk freq", x = "Category", y = "Count") 
```

-   walk reason bathroom

```{r}
bathroom <- activity_sy1_2 %>%
  mutate(walk_reason_bathroom=as.character(walk_reason_bathroom))%>%
  dplyr::select(walk_reason_bathroom) %>%
  # empty rows to recoded as not_record
   mutate(walk_reason_bathroom= if_else(walk_reason_bathroom == "", "not recorded", walk_reason_bathroom))
  
# Create a long format dataframe for plotting
bathroom<- bathroom%>%
  pivot_longer(cols = everything(), names_to = "variable", values_to = "value")

# Plot bar plots for each column
ggplot(bathroom, aes(x = value)) +
  geom_bar() +
  facet_wrap(~ variable, scales = "free", ncol = 5)+
  labs(title = "walk for bathroom", x = "Category", y = "Count") 
```

-   walk general enjoyment

```{r}
general_enjoyment <- activity_sy1_2 %>%
  mutate(walk_reason_general_enjoyment=as.character(walk_reason_general_enjoyment))%>%
  dplyr::select(walk_reason_general_enjoyment) %>%
  # empty rows to recoded as not_record
   mutate(walk_reason_general_enjoyment= if_else(walk_reason_general_enjoyment == "", "not recorded", walk_reason_general_enjoyment))
  
# Create a long format dataframe for plotting
general_enjoyment<- general_enjoyment%>%
  pivot_longer(cols = everything(), names_to = "variable", values_to = "value")

# Plot bar plots for each column
ggplot(general_enjoyment, aes(x = value)) +
  geom_bar() +
  facet_wrap(~ variable, scales = "free", ncol = 5)+
  labs(title = "walk for general_enjoyment", x = "Category", y = "Count") 
```

-   walk reason training

```{r}
training <- activity_sy1_2 %>%
  mutate(walk_reason_training=as.character(walk_reason_training))%>%
  dplyr::select(walk_reason_training) %>%
  # empty rows to recoded as not_record
   mutate(walk_reason_training= if_else(walk_reason_training == "", "not recorded", walk_reason_training))
  
# Create a long format dataframe for plotting
training<- training%>%
  pivot_longer(cols = everything(), names_to = "variable", values_to = "value")

# Plot bar plots for each column
ggplot(training, aes(x = value)) +
  geom_bar() +
  facet_wrap(~ variable, scales = "free", ncol = 5)+
  labs(title = "walk for training", x = "Category", y = "Count") 
```

Assess if worthwhile creating combined walk + aerobic column for duration +/- intensity to not lose data on dogs that are off leash:

= Combined all activity level

```{r}
#of dogs that are walked off leash how many of these dont have activity recorded in walk_duration
dogs_off_leash <- activity_sy1_2 %>%
  filter(walk_without_leash ==1)

table(dogs_off_leash$walk_duration)
table(dogs_off_leash$aerobic_duration)
table(dogs_off_leash$aerobic_pace)

#create a new column of total activity to include both lead walk and off lead activity
activity_sy1_2 <- activity_sy1_2 %>%
  mutate(total_activity_duration = paste(walk_duration,aerobic_duration,  sep = "_")) %>%
  mutate(total_activity_freq= paste(walk_frequency,aerobic_frequency,sep="_")) %>%
  mutate(total_activity_intensity =paste(walk_pace,aerobic_pace,sep="_"))


#duration recoding
  
less_than_30min <- c("_10-30 minutes", "10-30 minutes_","Less than 10 minutes_","Less than 10 minutes_Less than 10 minutes","_Less than 10 minutes","10-30 minutes_Less than 10 minutes")
#cardiac CS
between_31_60min <-c("_30-60 minutes","10-30 minutes_30-60 minutes","30-60 minutes_","Less than 10 minutes_10-30 minutes","10-30 minutes_10-30 minutes","30-60 minutes_Less than 10 minutes","Less than 10 minutes_30-60 minutes","30-60 minutes_10-30 minutes")
#respiratory CS
between_61_90min<- c("Greater than 60 minutes_","_Greater than 60 minute","10-30 minutes_Greater than 60 minutes","Greater than 60 minutes_10-30 minutes","_Greater than 60 minutes","Greater than 60 minutes_Less than 10 minutes","Greater than 60 minutes_Less than 10 minutes","Less than 10 minutes_Greater than 60 minutes")
# GI CS
between_91_120min <- c("Greater than 60 minutes_30-60 minutes","30-60 minutes_Greater than 60 minutes","30-60 minutes_30-60 minutes")
# urinary
more_than_120min<- c("Greater than 60 minutes_Greater than 60 minutes")

all_groups <- c(less_than_30min,between_31_60min,between_61_90min,
                between_91_120min,more_than_120min)

# Find any cateogories that are not in any group
duration <- setdiff(activity_sy1_2$total_activity_duration, all_groups)

# Display unclassified clinical signs
print(duration)


#recode in df
activity_sy1_2 <- activity_sy1_2  %>%
  mutate(
    total_activity_duration_regroup = case_when(
      total_activity_duration %in% less_than_30min ~ "less_than_30min",
      total_activity_duration %in% between_31_60min ~ "between_31_60min",
      total_activity_duration %in% between_61_90min ~ "between_61_90min",
      total_activity_duration %in% between_91_120min ~ "between_91_120min",
      total_activity_duration %in% more_than_120min ~ "more_than_120min",
      TRUE ~ "no_duration_recorded" # For values not in any group
    )
  )



#frequency recoding
never <- c("Never_","Never_Less than once/month") 
less_than_weekly <- c("Less than once/month_","Less than once/month_Less than once/month", "Less than once/month_Less than once/week","Less than once/week_Less than once/month","Never_Less than once/week","Less than once/week_",
                      "Less than once/week_Less than once/week")
min_weekly<-c("Once or twice/week_Once or twice/week","Once or twice/week_","Never_Once or twice/week","Once or twice/week_Less than once/month",
              "Once or twice/week_Less than once/week","Less than once/week_Once or twice/week","Less than once/month_Once or twice/week")
      
daily<-c("Once/day_","Less than once/week_Once/day","Never_Once/day", "Once or twice/week_Once/day","Once/day_Once or twice/week","Once/day_Less than once/week",
         "Once/day_Less than once/month","Once/day_Once or twice/week",
         "Once/day_Less than once/week", "Once/day_Less than once/month",
         "Once or twice/week_Once/day","Less than once/month_Once/day"
         )
multi_daily <-c("Once/day_Once/day","Once/day_More than once a day","More than once a day_","Once or twice/week_More than once a day","Less than once/month_More than once a day","More than once a day_Once/day","Never_More than once a day","More than once a day_Less than once/month","More than once a day_Once or twice/week","Less than once/week_More than once a day","More than once a day_More than once a day",
                "More than once a day_Less than once/week")

all_groups_freq <- c(never,less_than_weekly,min_weekly,daily,multi_daily)
freq <- setdiff(activity_sy1_2$total_activity_freq, all_groups_freq)

# Display unclassified freq
print(freq)

#recode in df
activity_sy1_2 <- activity_sy1_2  %>%
  mutate(
    total_activity_freq_regroup = case_when(
      total_activity_freq %in% never ~ "never",
      total_activity_freq %in% less_than_weekly ~ "less_than_weekly",
      total_activity_freq %in% min_weekly ~ "min_weekly",
      total_activity_freq %in% daily ~ "daily",
      total_activity_freq %in% multi_daily ~ "multi_daily",
      TRUE ~ "no_freq_recorded" # For values not in any group
    )
  )
#create recoded freq column

#intensity recoding
low_only <-c("_Bursts of exercise less than 30% of the time","Slow_","Slow_Bursts of exercise less than 30% of the time"
             )
moderate <-c("Average_","_Engages in moderate exercise (greater than 30% of the time but less than 60% of the time)","Brisk_","Brisk_Bursts of exercise less than 30% of the time","Average_Engages in moderate exercise (greater than 30% of the time but less than 60% of the time)","Jog_","Average_Bursts of exercise less than 30% of the time","Jog_Bursts of exercise less than 30% of the time","Brisk_Engages in moderate exercise (greater than 30% of the time but less than 60% of the time)","Slow_Engages in moderate exercise (greater than 30% of the time but less than 60% of the time)")
high <-c(" _Engages in strenuous exercise most of the time (greater than 60%)","Run_","Average_Engages in strenuous exercise most of the time (greater than 60%)","Brisk_Engages in strenuous exercise most of the time (greater than 60%)","_Engages in strenuous exercise most of the time (greater than 60%)","Jog_Engages in strenuous exercise most of the time (greater than 60%)","Run_Engages in strenuous exercise most of the time (greater than 60%)","Run_Engages in moderate exercise (greater than 30% of the time but less than 60% of the time)", "Slow_Engages in strenuous exercise most of the time (greater than 60%)",
         "Jog_Engages in moderate exercise (greater than 30% of the time but less than 60% of the time)","Run_Bursts of exercise less than 30% of the time")

all_groups_int <- c(low_only,moderate,high)
int <- setdiff(activity_sy1_2$total_activity_intensity, all_groups_int)
print(int)


#create recoded intensity column
activity_sy1_2 <- activity_sy1_2  %>%
  mutate(
    total_activity_intensity_regroup = case_when(
      total_activity_intensity %in% low_only ~ "low_int",
      total_activity_intensity %in% moderate ~ "mod_int",
      total_activity_intensity %in% high ~ "high_int",
      TRUE ~ "no_int_recorded" # For values not in any group
    )
  )

```

Create numeric versions of these columns for creating whole early life averages

(making these out of 100 rather than 1-5 )

```{r}

activity_sy1_2 <- activity_sy1_2  %>%
  mutate(
    total_activity_duration_regroup_num = case_when(
      total_activity_duration %in% less_than_30min ~ "20",
      total_activity_duration %in% between_31_60min ~ "40",
      total_activity_duration %in% between_61_90min ~ "60",
      total_activity_duration %in% between_91_120min ~ "80",
      total_activity_duration %in% more_than_120min ~ "100",
      TRUE ~ "0" # For values not in any group
    )
  )

activity_sy1_2 <- activity_sy1_2  %>%
  mutate(
    total_activity_freq_regroup_num = case_when(
      total_activity_freq %in% never ~ "20",
      total_activity_freq %in% less_than_weekly ~ "40",
      total_activity_freq %in% min_weekly ~ "60",
      total_activity_freq %in% daily ~ "80",
      total_activity_freq %in% multi_daily ~ "100",
      TRUE ~ "0" # For values not in any group
    )
  )




#create recoded intensity column
activity_sy1_2 <- activity_sy1_2  %>%
  mutate(
    total_activity_intensity_regroup_num = case_when(
      total_activity_intensity %in% low_only ~ "33.3",
      total_activity_intensity %in% moderate ~ "66.7",
      total_activity_intensity %in% high ~ "100",
      TRUE ~ "0" # For values not in any group
    )
  )
```

To take forward:

-   walk duration (although how does this differ from aerobic?)

-   walk pace

-   walk frequency

-   fetch freq - this could represent a high intensity ?

Ditch:

-   aerobic duration

-   aerobic freq

-   aerobic pace

    -   high proportion of not recorded across all aerobic variables (\~50%), as they need to have answered

-   walk without leash (almost equal split of Y N)

-   walk reason bathroom

-   walk general enjoyment

-   walk reason training

### Giving dogs a score for the classifier?

-   Convert characters eg. duration/freq to numeric

-   Convert characters into:

    -   USDA blanket \>30 min activity/dog/day recommendation - above or below this

    -   UKKC Golden retriever \>2h/day recommendation

-   Create an annual score in a classifier and an average count of activity

-   Average over the 2y of this dataset

Keeping relevant columns:

```{r}
#keeping only relevant columns


#create column for USDA activity <30min or >30 min
activity_sy1_2 <- activity_sy1_2 %>%
  mutate(USDA_30min = case_when (
    total_activity_duration_regroup %in% c("less_than_30min") ~ "below_USDA",  total_activity_duration_regroup %in% c("between_31_60min", "between_61_90min","between_91_120min","more_than_120min") ~ "more_than_USDA", 
                                 TRUE ~ NA ))

#create column for UKKC recommendaiton <2h but cannot do this one so >1h
activity_sy1_2 <- activity_sy1_2 %>%
  mutate(activity_1h_min = case_when (
total_activity_duration_regroup %in% c("less_than_30min","between_31_60min") ~ "below_1h",  total_activity_duration_regroup %in% c("between_61_90min","between_91_120min","more_than_120min") ~ "more_than_1h", 
                                 TRUE ~ NA ))



activity_sy1_2 <- activity_sy1_2 %>%
  mutate(activity_KC_2h_min = case_when (
total_activity_duration_regroup %in% c("less_than_30min","between_31_60min","between_61_90min","between_91_120min") ~ "below_KC",  total_activity_duration_regroup %in% c("more_than_120min") ~ "more_than_KC", 
                                 TRUE ~ NA ))

```

### Overall early life (first 2y of study)

Data to numeric

```{r}
activity_sy1_2 <- activity_sy1_2 %>%
  mutate(across(24:26, as.numeric))



```

Average across the study years score:

```{r}



totals_avg <- activity_sy1_2 %>%
  group_by(subject_id) %>%
  summarise(
    avg_activity_duration = (mean(sum(total_activity_duration_regroup_num, na.rm = TRUE)) /
                              (n() * 100)) * 100,
    avg_activity_intensity = (mean(sum(total_activity_intensity_regroup_num, na.rm = TRUE)) /
                              (n() * 100)) * 100,
    avg_activity_freq = (mean(sum(total_activity_freq_regroup_num, na.rm = TRUE)) /
                              (n() * 100)) * 100

  )

# Join the average values back to the original dataset
activity_sy1_2 <- activity_sy1_2 %>%
  left_join(totals_avg, by = "subject_id")

```

#### Summary stats of these new variables:

Barplots of categorical data

```{r}
cols_to_plot <- c("total_activity_duration_regroup", "total_activity_intensity_regroup", "total_activity_freq_regroup","USDA_30min","activity_1h_min","activity_KC_2h_min")



for (col in cols_to_plot) {
  # Create bar plot for each variable, counting the frequency of each value
  plot <- ggplot(activity_sy1_2, aes(x = get(col))) + 
    geom_bar() +  # This will count the frequency of each unique value in the column
    ggtitle(paste("Bar plot for", col)) +
    theme_minimal() +
    ylab("Frequency") +
    xlab(col)
  
  # Print the plot
  print(plot)
}
```

Histograms for average and total count data:

```{r}
cols_to_plot2 <-c(
                 "avg_activity_duration","avg_activity_intensity", "avg_activity_freq" )

for (col in cols_to_plot2) {
  # Create histogram for each numeric variable
  plot <- ggplot(activity_sy1_2, aes(x = get(col))) + 
    geom_histogram(binwidth = 1) +  # Adjust binwidth as needed based on your data
    ggtitle(paste("Histogram for", col)) +
    theme_minimal() +
    ylab("Frequency") +
    xlab(col)
  
  # Print the plot
  print(plot)
}
```

#### Recode average and sums across 3y period back into categorical OR ... just split the numeric data into quart/quintiles?

```{r}

```

Thoughts:

-   almost no dogs getting KC suggestion of \>=2h exercise - probably not a good discriminatory variable but perhaps 1h or USDA 30 min is?

-   Can choose between sum or average activity metrics?

-   Consider having 2-3 BCS variables in model eg. early life avg BCS/weight , overall life avg BCS/weight , adult life avg BCS/weight

## Adult life (3y+ in study)

### Data explore

```{r}
table(activity_sy3_beyond$activity)

#check how many dogs are in this annoying other specify bit
other <- activity_sy3_beyond %>%
  filter(activity == "Other Specify" | activity == "Other")

num_dogs_other <- unique(other$subject_id)
```

\~880 dogs have other recorded for activity = worth tidying at least main categories

```{r}
table(activity_sy3_beyond$activity_other)
```

Duration of exercise:

\~2000 dogs missing in \>= 1 record

```{r}
table(activity_sy3_beyond$duration)

other <- activity_sy3_beyond %>%
  filter(duration == "")

num_dogs_other <- unique(other$subject_id)
```

Frequency

```{r}
table(activity_sy3_beyond$frequency)


```

-   Only one dog missing frequency

Intensity:

```{r}
table(activity_sy3_beyond$pace)
table(activity_sy3_beyond$grade)
```

Think ditch grade as referring to surface walking conditions and less useful but majority (only missing for 6) have a pace

From this dataset use:

-   pace and frequency

-   duration (albeit with lots missing)

### Data manipulation

#### Total activity pace, duration and frequency over SY3-\>end

Recode pace to numbers:

```{r}
activity_sy3_beyond <- activity_sy3_beyond %>%
  mutate(pace_num = case_when(
    pace == "Slow walk" ~ 20,
    pace == "Average walk" ~ 40,
    pace == "Brisk walk" ~ 60,
    pace == "Jog" ~ 80,
    pace == "Run" ~ 100,
    pace == "" ~ 0  # empty cells replace with 0 for calculation purposes
  ))
```

Recode duration to numbers:

There is no duration in SY3_beyond

```{r,eval=FALSE}
#activity_sy3_beyond <- activity_sy3_beyond %>%
 # mutate(duration_num = case_when(
  #  duration == "Less than 10 minutes" ~ 25,
   # duration == "10-30 minutes" ~ 50,
    #duration == "31-60 minutes" ~ 75,
    #duration == "Greater than 60 minutes" ~ 100,
    #duration == "" ~ 0  # empty cells replace with 0 for calculation purposes
  #))
```

Recode frequency to numbers:

```{r}
activity_sy3_beyond <- activity_sy3_beyond %>%
  mutate(frequency_num = case_when(
    frequency == "Rarely" ~ 20,
    frequency == "Monthly" ~ 40,
    frequency == "Weekly" ~ 60,
    frequency == "Daily" ~ 80,
    frequency == "More than daily" ~ 100,
    frequency == "" ~ 0  # empty cells replace with 0 for calculation purposes
  ))
```

```{r}

```

#### Average activity pace,duration and frequency over SY3 -\> end

```{r}
totals_y3 <- activity_sy3_beyond %>%
  group_by(subject_id) %>%
  summarise(
   # avg_activity_duration = (mean(duration_num, na.rm = TRUE)/
    #                          (n() * 100)) * 100,
    avg_activity_intensity = (mean(pace_num, na.rm = TRUE)/
                              (n() * 100)) * 100,
    avg_activity_freq=(mean(frequency_num,na.rm=TRUE)/
                              (n() * 100)) * 100# Replace with your column
  )




# Join the totals back to the original dataset
activity_sy3_beyond <- activity_sy3_beyond %>%
  left_join(totals_y3, by = "subject_id")
```

#### Duration into categories (USDA, KC etc) - cannot

```{r}

#create column for USDA activity <30min or >30 min
#activity_sy3_beyond <- activity_sy3_beyond %>%
 # mutate(USDA_30min = case_when (
  #  duration %in% c("Less than 10 minutes", "10-30 minutes") ~ "below_USDA",  duration %in% c("31-60 minutes", "Greater than 60 minutes") ~ "more_than_USDA", 
#                                 TRUE ~ NA ))

#create column for UKKC recommendaiton <2h but cannot do this one so >1h
#activity_sy3_beyond <- activity_sy3_beyond %>%
 # mutate(activity_1h_min = case_when (
#duration %in% c("Less than 10 minutes", "10-30 minutes", "31-60 minutes") ~ "below_1h",  duration  %in% c("Greater than 60 minutes") ~ "more_than_1h", 
 #                                TRUE ~ NA ))

```

## Overview dataset

#### Data explore

This is dataset across all years of study but only contains activity_level and swimming specifics (not all activity)

```{r}
head(activity_overview)
```

I think from this dataset will just take the activity level column -

-   minimal missing data

```{r}
table(activity_overview$activity_level)
```

Median, mode or mean for overall activity level across whole study period

```{r}
activity_overview <- activity_overview %>%
  mutate(activity_level_num = case_when(
    activity_level == "None" ~ 25,
    activity_level == "Little" ~ 50,
    activity_level == "Moderate" ~ 75,
    activity_level == "Very active" ~ 100,
    activity_level == "" ~ 0)
    )
```

Median activity level

```{r}

totals <- activity_overview %>%
  group_by(subject_id) %>%
  summarise(mean_activity_level=(mean(activity_level_num, na.rm=TRUE)/(n() * 100)) * 100)
                              

# Join the totals back to the original dataset
activity_overview <- activity_overview %>%
  left_join(totals, by = "subject_id")
```

#### Combine all the datasets:

Modify further to create final single values for early life activity, rest of life and overview life activity

```{r}
activity_sy1_2_abr_3 <- activity_sy1_2 %>%
  dplyr::select(c(subject_id,year_in_study, USDA_30min,activity_1h_min,activity_KC_2h_min,avg_activity_duration,avg_activity_intensity,avg_activity_freq))


activity_sy3_beyond_abr_3 <- activity_sy3_beyond %>%
  dplyr::select(c(subject_id,year_in_study,
                  #frequency,pace,duration,frequency_num,pace_num,duration_num,<- not keeping as multi rows same year
                  avg_activity_freq,avg_activity_intensity))

activity_overview_abr_3 <- activity_overview %>%
  dplyr::select(c(subject_id,year_in_study,mean_activity_level))


activity_sy1_2_abr_3 <- activity_sy1_2_abr_3 %>%
  distinct(subject_id, .keep_all = TRUE)  %>%
 # mutate(study_year = "y1_2")%>%
  rename_with(~ paste0(., "_sy1_2"), .cols = 3:8)%>%
  dplyr::select(-c(year_in_study))
#sy 3+ 
activity_sy3_beyond_abr_3 <- activity_sy3_beyond_abr_3 %>%
  distinct(subject_id,  .keep_all = TRUE)  %>%
  #  mutate(study_year = "y3_on")%>%
  rename_with(~ paste0(., "_sy3"), .cols = 3:4)%>%
  dplyr::select(-c(year_in_study))
  
#overview
activity_overview_abr_3 <- activity_overview_abr_3 %>%
  distinct(subject_id, .keep_all = TRUE)  %>%
 # mutate(study_year="all_years") %>%
  rename_with(~ paste0(., "_overview"), .cols = 3:3)%>%
  dplyr::select(-c(year_in_study))
```

Combine into df

```{r}
activity_all_3 <- activity_overview_abr_3 %>%
  left_join(activity_sy1_2_abr_3, by= "subject_id")
activity_all_3_3 <- activity_all_3 %>%
  left_join(activity_sy3_beyond_abr_3,by="subject_id")


write.csv(activity_all_3_3, "C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/GRLS_activity_modified_variables_one_row_per_dog_outof100.csv")
```

Create endpoints dogs

```{r}
#endpoints to join up conditions dataset
endpoints <- read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Data/study_endpoints.csv")

endpoints_activity_all_3_3 <- endpoints %>%
  left_join(activity_all_3_3, by="subject_id")

write.csv(endpoints_activity_all_3_3,"C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/GRLS_activity_modified_variables_endpoints_outof100.csv")
```

what does each column mean?

```{r}
print(colnames(activity_all_3_3))
```

"mean_activity_level_overview" "total_activity_level_overview" \<- these are numericalised versions of activity assessment from O questionaire across lifetime

"USDA_30min_sy1_2", "activity_1h_min_sy1_2" ,"activity_KC_2h_min_sy1_2" \<- based on duration of exercise estimates provided from O questionaire in early years study and calculated according to exercise recommendations from USDA and KC

"USDA_30min_sy3" "activity_1h_min_sy3" \<- as above except for SY3 and beyond. no KC one as questionaire criteria changed so no \>120 min option available

"avg_activity_duration_sy1_2" "avg_activity_intensity_sy1_2" "avg_activity_freq_sy1_2"\
"avg_activity_duration_sy3" "avg_activity_freq_sy3" "avg_activity_intensity_sy3" \<- these are all sums/total or averages across either SY1_2 or SY3 and beyond for O reported activity frequency, intensity and duration
