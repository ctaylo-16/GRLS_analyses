---
title: "Create HSA cohort for RF diagnosis study"
format: html
editor: visual
---

## HSA cohort for RF diagnosis

Cohort:

-   All HSA cases and date of death

-   Remaining non-HSA dogs in the 3000 GRLS dogs with a final study date in which they hadn't been diagnosed with HSA set as 31/12/24

```{r}
library(tidyverse)
library(lubridate)
endpoints<- read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Data/study_endpoints.csv")
#death date file
dog_profile <-read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Data/dog_profile.csv")
#keep only date of death and subject id
dog_profile <- dog_profile %>%
  dplyr::select(c(subject_id,death_date,withdrawn_date,inactive_date))
endpoints_profile <- endpoints %>%
  left_join(dog_profile, by="subject_id")
```

need to get date of death for non HSA dogs that have died already to calculate 5y/3y back from

-   set HSA dogs final date as date of diagnosis of HSA

-   set rest of endpoints dataset final date as their date of death

-   since there are dogs that died in endpoints with multiple conditions, need to then filter so that only have unique IDs kept - so one end date for each unique ID

-   for those not dead yet need to give them a death date of end Dec 2024

```{r}
endpoints_profile <- endpoints_profile %>%
  mutate(across(where(is.character), tolower))
#create in endpoints df a column called final_date where get date of death from dog_profile for dogs that did not die with HSA
#creat had HSA column in endpoitns_profile
endpoints_profile <- endpoints_profile %>%
  mutate(had_HSA = case_when(
    grepl('hemangiosarcoma', tracked_condition, ignore.case = TRUE) ~ 1, # If 'haemangiosarcoma' is found (case insensitive)
    TRUE ~ 0 # Otherwise, 0
  ))

#make sure those dogs that are not unique ID are removed - should have ~1400 rows left
endpoints_profile2 <- endpoints_profile %>%
  group_by(subject_id) %>% # Assuming 'dog_id' uniquely identifies each dog
  arrange(desc(had_HSA), desc(is_cause_of_death)) %>% # Prioritize had_HSA == 1, then cause_of_death == 1
  slice_head(n = 1) %>% # Keep only the first row per dog
  ungroup()
#list of dogs with HSA
HSA_subjectIDs<- endpoints_profile2 %>%
  filter(had_HSA==1)
HSA_subjectID <- HSA_subjectIDs$subject_id
endpoints_profile2 <- endpoints_profile2 %>%
  mutate(final_date = case_when(
    had_HSA == 1 ~ diagnosis_date, # Use `diagnosis_date` if `had_HSA` is 1
    TRUE ~ death_date              # Otherwise, use `death_date`
  ))


```

Still approx \~150 dogs in this endpoints dataset do not have a death date, and when I examine records folders appear to not have clinical records so I assume are actually not dead

Therefore, will have censor date (31/12/24) like remaining dogs in GRLS cohort

```{r}
endpoints_profile2 <- endpoints_profile2 %>%
  mutate(final_date = case_when(
    had_HSA == 1 ~ diagnosis_date, # Use `diagnosis_date` if `had_HSA` is 1
    TRUE ~ death_date              # Otherwise, use `death_date`
  ),
  final_date = if_else(final_date == "" | is.na(final_date), as.Date("2024-12-31"), as.Date(final_date))) # Replace missing dates with "2024-12-31"
```

-   Set final_date as 31/12/24 for rest of cohort in dog profile not captured in endpoints dataset

-   Set rest of cohort as had_HSA = 0

-   save csv of status and then use for recalculating other variables for analyses

```{r}
dog_profile_not_endpoints <- dog_profile %>%
  anti_join(endpoints_profile2,by="subject_id")

dog_profile_not_endpoints <- dog_profile_not_endpoints %>%
  mutate(
    final_date = case_when(
      !is.na(as.Date(death_date, format = "%Y-%m-%d")) & death_date != "" ~ as.Date(death_date, format = "%Y-%m-%d"),
      !is.na(as.Date(withdrawn_date, format = "%Y-%m-%d")) & withdrawn_date != "" ~ as.Date(withdrawn_date, format = "%Y-%m-%d"),
      !is.na(as.Date(inactive_date, format = "%Y-%m-%d")) & inactive_date != "" ~ as.Date(inactive_date, format = "%Y-%m-%d"),
      TRUE ~ as.Date("2024-12-31")
    )
  )
dog_profile_not_endpoints <- dog_profile_not_endpoints %>%
  mutate(had_HSA = 0)

dog_profile_not_endpoints <- dog_profile_not_endpoints %>%
  dplyr::select(-death_date,-withdrawn_date,-inactive_date)

```

Now abridge endpoints dogs and join dfs together:

```{r}
endpoints_profile2_abr <- endpoints_profile2 %>%
  dplyr::select(c(subject_id, had_HSA, final_date))

endpoints_and_all_dogs <- rbind(endpoints_profile2_abr,dog_profile_not_endpoints)

table(endpoints_and_all_dogs$had_HSA)
```

As of Dec 31 date = 490 HSA cases and 2554 non-cases

Now incorporating in values for the final record study year for each dog for calculating exposures etc from

```{r}
owner_q <- read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Data/activity_overview.csv")
#keep only record year cols
owner_q2 <- owner_q %>%
  dplyr::select(c(subject_id,year_in_study,record_date))

#now keep only max row for each dog
owner_q2 <- owner_q2 %>%
  group_by(subject_id) %>%
  filter(year_in_study == max(year_in_study)) %>%
  slice(1) %>% # In case of ties, keep the first row
  ungroup() 
```

```{r}
#year in study from endpoints
endpoints_year_in_study <- endpoints %>%
  dplyr::select(c(subject_id,year_in_study))

HSA_dogs <- endpoints_and_all_dogs %>%
  filter(had_HSA==1)
HSA_subjectIDs <- HSA_dogs$subject_id
non_HSAdogs <- endpoints_and_all_dogs %>%
  filter(had_HSA==0)
#get endpoint HSA dog for year in study
endpoint_HSA_year_in_study <- endpoints %>%

  dplyr::select(c(subject_id,year_in_study,diagnosis_date))
  #renaming to join up better for owner Q
endpoint_HSA_year_in_study <- endpoint_HSA_year_in_study %>%
  rename(year_in_study_diagnosis_or_final_record_year = year_in_study)
endpoint_HSA_year_in_study <- endpoint_HSA_year_in_study %>%
    #renaming to join up better for owner Q
  rename(record_date = diagnosis_date)
#now only keep HSA dogs in this set
endpoint_HSA_year_in_study2 <- endpoint_HSA_year_in_study%>%
  filter(subject_id %in% HSA_subjectID)
endpoint_HSA_year_in_study2 <- endpoint_HSA_year_in_study2 %>%
    distinct(subject_id,.keep_all = TRUE) 
  


owner_q3 <- owner_q2 %>%
  rename(year_in_study_diagnosis_or_final_record_year = year_in_study)

owner_q4 <- owner_q3 %>%
  filter(!(subject_id %in% HSA_subjectID))

owner_dates_and_HSA_diagnosis <- rbind(owner_q4, endpoint_HSA_year_in_study2)
```

Now add this last study record date onto endpoints and profile joined df

```{r}
endpoints_and_all_dogs_study_record_year <- endpoints_and_all_dogs %>%
  left_join(owner_dates_and_HSA_diagnosis, by="subject_id")

#issue as some record years only are YYYY-MM format so now auto-add a 01 onto these:
endpoints_and_all_dogs_study_record_year2 <- endpoints_and_all_dogs_study_record_year %>%
  mutate(record_date = case_when(
    grepl("^\\d{4}-\\d{2}$", record_date) ~ paste0(record_date, "-01"),  # Append "-01" to YYYY-MM
    TRUE ~ record_date  # Keep as is for full YYYY-MM-DD dates
  ))

endpoints_and_all_dogs_study_record_year2$record_date <- as.Date(endpoints_and_all_dogs_study_record_year2$record_date)
#now finally, replacing the final record date in HSA=1 dogs with diagnosis date
endpoints_and_all_dogs_study_record_year3 <- endpoints_and_all_dogs_study_record_year2 %>%
  mutate(record_date = case_when(
    had_HSA == 1 ~ final_date,
    TRUE ~ record_date  # Leave as is for all other cases
  ))


```

Save this cohort

```{r}
write.csv(endpoints_and_all_dogs, "C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/HSA_study_pop_with_final_date.csv")

write.csv(endpoints_and_all_dogs_study_record_year3, "C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/HSA_study_pop_with_final_date_with_final_study_record_year.csv")
```

What columns mean:

-   had_HSA = was HSA recorded as an endpoint diagnosis if so ==1 else ==0

creating-HSA-RF-dataset

-   final date = for dogs with HSA ==1 final date is the date of diagnosis of HSA and for all other dogs it is either the date of death (for dogs from endpoint data), the withdrawn or inactive date or finally a censoring date of 31/12/24

-   year_in_study_diagnosis_or_final_record_year - for dogs with HSA ==1 this is the record_year in the endpoints dataset corresponding to diagnosis date and for HSA ==0 dogs this is the final /most recent record_year available for the dog

-   record_date = for dogs with HSA==1 this is diagnosis date and for dogs where HSA==0 it is the date corresponding to when the final record was sent in (NB. many of these were just in YYYY-MM format so now have been modified to be automatically the first of the month for YYYY-MM-DDDD calculations)

## Cohort plus RF data added in

-   still missing medication usage but that needs sorting later

```{r}
#MDI
MDI_dogs <- read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/GRLS_dogs_MDI_2019.csv")
MDI_dogs <- MDI_dogs %>%
  dplyr::select(c(subject_id,MDI_quintile,MDI.rate))
#enviro
enviro<-read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/HSA_cohort_house_location_enviro_exposures.csv")
enviro <- enviro %>%
  dplyr::select(-c("X.1","year_in_study_diagnosis_or_final_record_year.x","record_date.y.x",14:28))
#comorb
comorb<-read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/HSA_cohort_comorbs_with_HSA_final_date_calculations.csv")
comorb <- comorb %>%
  dplyr::select(-c("X.1","X"))

#activity
activity <-read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/HSA_cohort_activity_classification.csv")
activity <-activity %>%
  dplyr::select(-c("X.1","X","record_date"))
#lifestyle
lifestyle<-read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/HSA_cohort_lifestyle_exposures.csv")
lifestyle <- lifestyle%>%
  dplyr::select(-c("X.1","record_date.x.x","X","record_date.y","sleep_location","specific_sleep_location","in.the.garage_YN","in.the.house_YN","outside_YN"))
#neut
neut<-read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/all_cases_all_records_repro.csv")
neut <- neut %>%
  dplyr::select(-c("X","birth_date2"))

#create an ever bred from variable to incorporate entire and neutered dogs
neut <- neut %>%
  mutate(ever_bred_from = if_any(c(neutered_ever_bred,spayed_while_pregnant,intact_sired_litters_natural_ever,neutered_females_bred_with_count_ever,neutered_sired_litters_natural_ever,preg_pre_neuter,num_bred_before_neutering,num_breeding_before_neutering),~ . >= 1) * 1)

#combine all
dfs <- list(MDI_dogs, enviro, comorb, activity, lifestyle, neut)





# Perform full join iteratively on subject_id
merged_HSA_data <- reduce(dfs, full_join, by = "subject_id")


#remove messy extra cols eg. X.x
merged_HSA_data <- merged_HSA_data %>%
  dplyr::select(-c(had_HSA.y,had_HSA.x,had_HSA.y.y,
                   final_date.x,final_date.x.x,final_date.y.y,
                   record_date.y.y))

### add in age at final date
get_age <- read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Data/dog_profile.csv")
get_age <- get_age %>%
  dplyr::select(c(subject_id,birth_date,sex_status))

merged_HSA_data <- merged_HSA_data %>%
  left_join(get_age,by="subject_id")

#calc difference between birth date and final_date
merged_HSA_data <- merged_HSA_data %>%
  mutate(
    date_of_birth = as.Date(birth_date, format = "%Y-%m-%d"),
    final_date2= as.Date(final_date.y, format = "%Y-%m-%d")
  ) %>%
  mutate(age_at_final_date = as.numeric(interval(date_of_birth, final_date2) / years(1)))

###add in weight and BCS data for the dogs
dog_weight <- read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Data/exam_physical.csv")
dog_weight <- dog_weight %>%
  dplyr::select(c(subject_id,year_in_study,height,weight,purina_body_condition_score))
#remerge back to HSA data 
dog_weight_HSA <- dog_weight %>%
  left_join(merged_HSA_data,by="subject_id")
###for record years 5y prior to endpoint record year do an average of weight
get_mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))] # Returns the most frequent value
}

dog_weight_HSA2 <- dog_weight_HSA %>%
  group_by(subject_id) %>%
  filter(year_in_study >= (year_in_study_diagnosis_or_final_record_year - 5)) %>%
  summarise(
    avg_weight_5y_prior_endpoint = mean(weight),
    avg_height_5y_prior_endpoint = mean(height),
    avg_purina_BCS_5y_prior_endpoint = mean(purina_body_condition_score),
    mode_purina_BCS_5y_prior_endpoint = get_mode(purina_body_condition_score), # Mode calculation

    .groups = "drop"
  )
  
#remove extra columns before join

#rejoin back to merged HSA data
merged_HSA_data <- merged_HSA_data %>%
  left_join(dog_weight_HSA2,by="subject_id")

##add in medication info:

meds<- read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/HSA_cohort_medications_5y_and_lifetime.csv")

#add onto merged_HSA_data
merged_HSA_data <- merged_HSA_data %>%
  left_join(meds, by="subject_id")

#for the ~200 dogs with no meds records recode their NAs
merged_HSA_data <- merged_HSA_data %>%
  mutate(across(c(384:443), ~ replace(., is.na(.), "medication_use_not_recorded")))

merged_HSA_data <- merged_HSA_data %>%
  rename(study_year_first_chronic_inflam = study_year_first_chronic_inflam.x)

#write to csv
write.csv(merged_HSA_data,"C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/HSA_cohort_all_RFs_data.csv")
```
