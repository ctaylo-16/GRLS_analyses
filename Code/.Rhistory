set_names(paste0(names(IPT_variations), "_YN"))
)
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate(IPT_cell_type =case_when(
grepl("yes", both_YN,ignore.case=TRUE)~"B_and_T",
grepl("b| (cd21+, cd34+)| b - but not sure", IPT.result.B.or.T,ignore.case=TRUE)~"B",
grepl("t", IPT.result.B.or.T,ignore.case=TRUE)~"T",
TRUE ~ NA_character_  # For rows that don't match any condition
))
#Ki67
table(GRLS_lymphoma$Ki.67.result)
#Ki67 only done for 4 dogs , can describe if desired
#CD3
table(GRLS_lymphoma$CD3.result)
#tidy
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate(CD3_result_tidy =case_when(
grepl("neg", CD3.result,ignore.case=TRUE)~"CD3_negative",
grepl("pos", CD3.result,ignore.case=TRUE)~"CD3_positive",
TRUE ~ NA_character_  # For rows that don't match any condition
))
#CD20
table(GRLS_lymphoma$CD20.result)
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate(CD20result_tidy =case_when(
grepl("neg", CD20.result,ignore.case=TRUE)~"CD20_negative",
grepl("pos", CD20.result,ignore.case=TRUE)~"CD20_positive",
TRUE ~ NA_character_  # For rows that don't match any condition
))
#PARR
table(GRLS_lymphoma$PARR.result)
#class so the high % ones are positive an
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate(PARR_result_tidy = case_when(
grepl("t cell| tcell|t zone", PARR.result, ignore.case=TRUE)~"T_cell_positive",
grepl("b cell",PARR.result,ignore.case=TRUE)~"B_cell_positive",
TRUE ~ NA_character_  # For rows that don't match any condition
))
table(GRLS_lymphoma$Surgical.procedures.performed..free.text.)
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate(surgery_type_tidy =case_when(
grepl("biop|bios",Surgical.procedures.performed..free.text.,ignore.case=TRUE)~"biopsy",
grepl("splen",Surgical.procedures.performed..free.text.,ignore.case=TRUE)~"splenectomy",
grepl("r&a|kidney|ex",Surgical.procedures.performed..free.text.,ignore.case=TRUE)~"other_abdominal_surgery",
grepl("ln",Surgical.procedures.performed..free.text.,ignore.case=TRUE)~"LN_removal",
grepl("tube|amp|mass|sts",Surgical.procedures.performed..free.text.,ignore.case=TRUE)~"other_surgery",
TRUE ~ NA_character_  # For rows that don't match any condition
))
table(GRLS_lymphoma$surgery_type_tidy)
table(GRLS_lymphoma$Staging.done.YN)
table(GRLS_lymphoma$Staging...liver.spleen.investigated.YN)
table(GRLS_lymphoma$Staging..blood.smear.investigated.YN)
table(GRLS_lymphoma$Staging..bone.marrow.investigated.YN)
table(GRLS_lymphoma$Tumour.stage)
#reclassify stage
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate(tumour_stage_tidy =case_when(
grepl("biop|bios",Tumour.stage,ignore.case=TRUE)~"stage_1",
grepl("2|2-3",Tumour.stage,ignore.case=TRUE)~"stage_2",
grepl("3a|iiia|3b+|stg 3",Tumour.stage,ignore.case=TRUE)~"stage_3",
grepl("iv|iva|4b",Tumour.stage,ignore.case=TRUE)~"stage_4",
grepl("v|va|va",Tumour.stage,ignore.case=TRUE)~"stage_5",
TRUE ~ NA_character_  # For rows that don't match any condition
))
table(GRLS_lymphoma$tumour_stage_tidy)
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate(tumour_substage = case_when(
grepl("a|iiia|va|iva",Tumour.stage,ignore.case=TRUE)~"substage_a",
grepl("b|3b+|4b|vb|ivb",Tumour.stage,ignore.case=TRUE)~"substage_b",
TRUE ~ NA_character_
))
table(GRLS_lymphoma$Lymphoma.type..multicentric..cutaneous..gastrointestinal..other.not.specified.)
#reclass
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate(lymphoma_type_tidy = case_when(
grepl("multicentric",Lymphoma.type..multicentric..cutaneous..gastrointestinal..other.not.specified., ignore.case=TRUE)~"multicentric",
grepl("cutaneous",Lymphoma.type..multicentric..cutaneous..gastrointestinal..other.not.specified., ignore.case=TRUE)~"cutaneous",
grepl("gastro|gi",Lymphoma.type..multicentric..cutaneous..gastrointestinal..other.not.specified., ignore.case=TRUE)~"gastrointestinal",
grepl("indollukemia|leukemia",Lymphoma.type..multicentric..cutaneous..gastrointestinal..other.not.specified.,ignore.case=TRUE)~"indolent",
grepl("opth|splen|tongue|spinal|leuk|cardiac|retro",Lymphoma.type..multicentric..cutaneous..gastrointestinal..other.not.specified., ignore.case=TRUE)~"other_location",
grepl("not specified",Lymphoma.type..multicentric..cutaneous..gastrointestinal..other.not.specified., ignore.case=TRUE)~"not_specified",
TRUE ~ NA_character_
))
#size
table(GRLS_lymphoma$Cell.size...large.or.intermediate.or.small)
#classify according to first size mentioned
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate(lymphoma_cell_size_tidy = case_when(
grepl("small to intermediate|small",Cell.size...large.or.intermediate.or.small, ignore.case=TRUE)~"small_size",
grepl("int|intermediate to large| medium|intermediate",Cell.size...large.or.intermediate.or.small, ignore.case=TRUE)~"intermediate_size",
grepl("large",Cell.size...large.or.intermediate.or.small, ignore.case=TRUE)~"large_size",
grepl("abnormal|not specified",Cell.size...large.or.intermediate.or.small, ignore.case=TRUE)~"not_specified_size",
TRUE ~ NA_character_
))
table(GRLS_lymphoma$lymphoma_cell_size_tidy)
#which protocol used
table(GRLS_lymphoma$Chemotherapy.protocol)
#seperate columns for did they have X chemo YN (NB, this is from protocol and second protocol columns)
chemo_groupings <- list(
"CHOP_Protocol" = c("chop", "chop- 10/6/2019 to 27/10/2019", "chop- started 23/10/2019 to 5/4/2020",
"chop 12/11/18-13/2/19", "chop switched to ccnu", "chop, adriamycin, cytotoxan + lasix",
"chop, asparginase to 11/2/2019", "vincristine and elspar (modified chop)", "vincristine/cytoxan/lasix",
"modified lchop", "vincristine, pred, cyclophosphamide, doxorubicin",
"2nd chop started 29/8/2022, out of remission on 19/12/2022- started lomustine",
"chop 2 16/12/2016, relapse 2/22/2018", "chop 2 22/7/19, changed to tenovea 21/10/19, elspar and lomustine since 11/19",
"chop 2 to ccnu and tanovea snd mitoxantrone", "chop again, 21/3/19", "chop with weekly treatments"),
"Lomustine" = c("ccnu", "ccnu, vincristine + steroids", "ccnu, vincristine +steroids", "lomustine", "lomustine & prednisone",
"lomustine 2/3/2022 to 27/7/2022 lopp: vincristine, lomustine, prednisone, and procarbazine",
"lomustine, tanovea", "lomustine, tanovea, mitoxantrone",
"chlorambucil- gi issues, restart lomustine and pred 25/10/2022, start elspar and ctx 22/3/2023, change to lomustine and ctx 5/5/2023, adriamycin and l-asp post pneumonia 19/5/2023"),
"L-Asparaginase" = c("elspar", "elspar & chop", "elspar & prednisone", "l-asp given 15/11/2021 and chop started 22/11/2021",
"l-asparaginase, vincristine, achieved cr 29/1/2016", "lspar", "lspar & prednisone", "vincristine and elspar (modified chop)",
"l-asp with steroids, the chlorambucil 4 times, switched to cyclophosphamide 3 times- last 7/10/2020, modified chop started 13/10/2020 finished 15/2/2021, march 2021 started ccnu post relapse"),
"Prednisone_Based" = c("chlorambucil & prednisone", "chlorambucil and prednisolone", "vincristine & prednisone", "vincristine, prednisone",
"vincristine and prednisone", "vincristine and prednisolone", "vincristine, prednisone, cytoxan, vincristine, doxorubicin",
"oral investigational drug given by owner, prednisone, cytoxan, vincristine, doxorubicin"),
"MOPP" = c("l-asp-> vincristine, procarbazine, mustargen (mopp)", "mopp", "tanovea + elspar, mop, then ccnu", "tanovea, mopp"),
"Chlorambucil_Protocol" = c("chlorambucil", "chlorambucil & prednisone", "chlorambucil and prednisolone"),
"Miscellaneous" = c("wisconsin protocol, lspar and prednisone", "yes, but not for lymphoma", "laverdia (mentioned but unclear treatment)"),
"Other_Drugs" = c("vincristine +steroids", "vincristine and elspar (modified chop)", "palladia, tanovea", "t cep antibody therapy", "tanovea")
)
# Create new columns dynamically
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate(
!!!map(chemo_groupings, ~ detect_ln(.x, GRLS_lymphoma$Chemotherapy.protocol)) %>%
set_names(paste0(names(chemo_groupings), "_YN"))
)
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate(chemo_group_tidy = case_when(
grepl("chop|adriamycin|cytoxan|lasix|vincristine", Chemotherapy.protocol, ignore.case=TRUE) ~ "CHOP_Protocol",
grepl("ccnu|lomustine", Chemotherapy.protocol, ignore.case=TRUE) ~ "Lomustine",
grepl("elspar|l-asp", Chemotherapy.protocol, ignore.case=TRUE) ~ "L-Asparaginase",
grepl("prednisone|vincristine|cyclophosphamide|doxorubicin", Chemotherapy.protocol, ignore.case=TRUE) ~ "Prednisone_Based",
grepl("mopp|mustargen", Chemotherapy.protocol, ignore.case=TRUE) ~ "MOPP",
grepl("chlorambucil", Chemotherapy.protocol, ignore.case=TRUE) ~ "Chlorambucil_Protocol",
grepl("wisconsin|lspar", Chemotherapy.protocol, ignore.case=TRUE) ~ "Miscellaneous",
grepl("vincristine", Chemotherapy.protocol, ignore.case=TRUE) ~ "Other_Drugs",
TRUE ~ NA_character_
))
#how many protocols
table(GRLS_lymphoma$Is.there..1.chemo.protocol.recorded_YN)
table(GRLS_lymphoma$X2nd.chemo.protocol.recorded)
#now classify second protocol
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate(second_chemo_group_tidy = case_when(
grepl("chop|adriamycin|cytoxan|lasix|vincristine", X2nd.chemo.protocol.recorded, ignore.case=TRUE) ~ "CHOP_Protocol",
grepl("ccnu|lomustine", X2nd.chemo.protocol.recorded, ignore.case=TRUE) ~ "Lomustine",
grepl("elspar|l-asp", X2nd.chemo.protocol.recorded, ignore.case=TRUE) ~ "L-Asparaginase",
grepl("prednisone|vincristine|cyclophosphamide|doxorubicin", X2nd.chemo.protocol.recorded, ignore.case=TRUE) ~ "Prednisone_Based",
grepl("mopp|mustargen", X2nd.chemo.protocol.recorded, ignore.case=TRUE) ~ "MOPP",
grepl("chlorambucil", X2nd.chemo.protocol.recorded, ignore.case=TRUE) ~ "Chlorambucil_Protocol",
grepl("wisconsin|lspar", X2nd.chemo.protocol.recorded, ignore.case=TRUE) ~ "Miscellaneous",
grepl("vincristine", X2nd.chemo.protocol.recorded, ignore.case=TRUE) ~ "Other_Drugs",
grepl("tanovea", X2nd.chemo.protocol.recorded, ignore.case=TRUE) ~ "Miscellaneous",
grepl("palladia", X2nd.chemo.protocol.recorded, ignore.case=TRUE) ~ "Other_Drugs",
grepl("t cep antibody therapy",X2nd.chemo.protocol.recorded, ignore.case=TRUE) ~ "Other_Drugs",
TRUE ~ NA_character_
))
#pre-chemo steroids?
table(GRLS_lymphoma$Pre.chemotherapy.corticosteroid.use_YN)
#palliative steroids?
table(GRLS_lymphoma$Palliative.corticosteroid.use_YN)
#radiation?
table(GRLS_lymphoma$Radiation.therapy_YN)
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate(radiation_tidy = case_when(
grepl("y",Radiation.therapy_YN,ignore.case=TRUE)~"y",
grepl("n|na",Radiation.therapy_YN,ignore.case=TRUE)~"n",
TRUE ~ NA_character_
))
#remission lengths
table(GRLS_lymphoma$Remission_YN)
GRLS_lymphoma <- GRLS_lymphoma%>%
mutate(Remission_YN = case_when(
Remission_YN == "partial" ~ "y",
TRUE ~ Remission_YN  # Keeps other values unchanged
))
table(GRLS_lymphoma$Remission.1.length)
#recode these remissions into groups
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate(remission_1_length_tidied= case_when(
grepl("day|1 week|2 week",Remission.1.length,ignore.case=TRUE)~"<1_month",
grepl("1 month|1 mo|1.5m|2 months|3.5m|4 months|5 m|5m|6 weeks",Remission.1.length,ignore.case=TRUE)~">1m-<6_months",
grepl("6 months|9 months|9m",Remission.1.length,ignore.case=TRUE)~">=6m-<1y",
grepl(">1 year|3 years|>3y",Remission.1.length,ignore.case=TRUE)~">=1y",
TRUE ~ NA_character_
))
table(GRLS_lymphoma$remission_1_length_tidied)
table(GRLS_lymphoma$Remission.2.length)
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate(remission_2_length_tidied= case_when(
grepl("day|1 week|2 week",Remission.2.length,ignore.case=TRUE)~"<1_month",
grepl("1 month|1 mo|1mo|1.5m|2 months|3m|3.5m|4 months|5 m|5m|6 weeks",Remission.1.length,ignore.case=TRUE)~">1m-<6_months",
grepl("6 months|9 months|9m",Remission.2.length,ignore.case=TRUE)~">=6m-<1y",
grepl(">1 year|3 years|>3y|12mo",Remission.2.length,ignore.case=TRUE)~">=1y",
TRUE ~ NA_character_
))
#classify comorbidities 1 and 2 like in other GRLS work
table(GRLS_lymphoma$Co.morbidities_YN)
table(GRLS_lymphoma$Comorbidity.1)
table(GRLS_lymphoma$Comorbidity.2)
#combine list of comorbs together and then classify with list
comorbs_1 <- unique(GRLS_lymphoma$Comorbidity.1)
comorbs_2 <- unique(GRLS_lymphoma$Comorbidity.2)
comorbs_all <- union(setdiff(comorbs_1, comorbs_2), setdiff(comorbs_2, comorbs_1))
#pre-existing medications group  in other GRLS work on comorbidities with terms in free text here added on
intestinal_parasitism <- c("giardia", "hookworms", "coccidia", "tapeworms", "whipworms", "roundworms", "eimeria", "isospora")
tick_borne_parasitism <-c("lyme_disease", "anaplasma", "rocky_mountain_spotted_fever", "ticks", "ehrlichia", "lyme disease", "lyme diseases, oa?", "lyme/anaplasma", "lyme+", "anaplasma and lyme +", "positive anaplasma", "erlichia +", "erlichia")
other_parasitism <-c("fleas", "fungal_infection", "heartworm", "ear_mites")
infectious <- c("leptospirosis","parvovirus","bacterial cystitis/recurrent uti", "chronic uti's/ bacterial cystitis", "cystitis", "uti", "frequent utis", "previous utis", "chronic urinary incontinence","history of valley fever", "mma- coccidioides")
orthopaedic <-c("osteoarthritis", "l ccl partial tear", "oa of stifle", "hip dysplasia", "right elbow dysplasia grade ii", "ccl rupture", "acl tear", "tendonitis/ arthritis", "arthritis- cervical neck spine", "lh partial ccl tear, lh iliopsoas injury", "chronic lameness- hx of car accident", "lameness","hypothyroidism, chronic lameness, obesity","overweight, arthritis","dvd, larpar", "seizures, oa","tail fracture", "broken leg, histiocytoma")
immune_mediated <- c("uveitis", "autoimmune_thyroiditis", "keratoconjunctivitis_sicca", "megaesophagus", "diabetes_mellitus", "cushings_disease", "hypothyroidism", "granuloma", "immune complex formation", "suspected cushings/ thyroid carcinoma","dvd, larpar")
cardiovascular <- c("cardiomyopathy", "hypertension", "heart base tumor", "heart base mass", "mild degenerative valve disease", "degenerative mitral and tricuspid valve disease", "mitral valve disease", "pulmonary thrombosis", "portal vein thrombus")
gastrointestinal <-c("chronic_colitis", "pancreatitis", "malabsorptive_disorder", "chronic pancreatitis", "cystic endometrial hyperplasia", "intermittent mixed bowel diarrhea", "intermittent diarrhea - bacterial", "gastric ulcers","mesenteric volvulus","fb")
inflammatory_other <- c("tracheobronchitis", "hypercalcaemia", "pigmentary_uveitis", "ear infections", "chronic pyoderma", "chronic pruritis", "chronic rhinitis/ nasal discharge", "allergy, obesity", "pruritis", "severe allergies", "atopy", "allergies, chronic otitis", "chronic hot spots, skin infections", "many pyodera/dermatitis events", "chronic otitis, allergic dermatitis", "dermatitis", "food allergy", "skin allergies", "chronic otitis, overweight", "atopic dermatitis, allergies", "seasonal allergies/pyoderma", "chronic otitis, chronic allergies", "dermatitis lip fold","anal sac infection")
#new categories
neoplasia <- c("melanoma, low grade", "heart base mass", "primary bone tumor- unspecified", "hemangiosarcoma- not confirmed", "chronic lymphocytic leukemia", "possible acute lymphoblastic leukemia", "plasmacytoma on toe", "soft tissue sarcoma", "cutaneous hemangiosarcoma", "hemangiosarcoma, cutaneous and completely excised", "soft tissue sarcoma, complete excision", "mammary mass", "hepatic sarcoma and other liver-based tumors, splenic hemangiosarcoma/ multicentric neoplasia", "basal cell tumor, trichoblastoma, mct, fibrosarcoma", "skin mct", "synovial cell sarcoma", "interstitial testicular tumor")
ocular<-c("glaucoma", "uveitis", "pigmentary uveitis", "persistent pupilary membrane", "nuclear sclerosis, anterior uveitis, retinal hemorrhage", "bilateral entropion")
neurological<-c("seizures, oa", "hindlimb weakness", "right cerebrum lesion", "cognitive dysfunction", "meningitis secondary to toxoplasmosis")
urinary_renal <-c("chronic hematuria", "urinary issues- incont, leaking, utis, chronic proteinuria", "r kidney removed due to dioctophyme renale infection")
respiratory<-c("pneumonia", "pneumothorax, lung lobectomy","tracheobronchitis")
endocrine <-c("hypothyroidism", "hypothyroid- unconfirmed", "hypothyroidism, chronic lameness, obesity", "hypothyrodism resolved", "hypothyrodism")
misc <- c("lumps and bumps", "follicular cysts- removed", "hair follicle tumor, follicular cyst reoccurring", "sq masses", "meiobian adenoma", "overweight", "overweight, arthritis", "dvd, larpar", "grade iv afebrile neutropenia", "mesenteric volvulus", "mass on right shoulder", "hepatopathy/hepatic nodules of unconfirmed origin",  "litter of puppies")
chronic_inflammatory <- c(
# Chronic Inflammatory Diseases (General)
"osteoarthritis", "oa of stifle", "tendonitis/ arthritis", "arthritis- cervical neck spine",
"chronic lameness- hx of car accident", "lameness", "chronic rhinitis/ nasal discharge",
"chronic pyoderma", "chronic pruritis", "chronic hot spots, skin infections", "chronic hematuria",
"chronic urinary incontinence",
# Immune-Mediated Diseases
"uveitis", "autoimmune_thyroiditis", "keratoconjunctivitis_sicca", "megaesophagus", "diabetes_mellitus",
"cushings_disease", "granuloma", "immune complex formation", "suspected cushings/ thyroid carcinoma",
# Chronic Joint & Musculoskeletal Inflammation
"osteoarthritis", "l ccl partial tear", "oa of stifle", "hip dysplasia", "right elbow dysplasia grade ii",
"ccl rupture", "acl tear", "lh partial ccl tear, lh iliopsoas injury",
# Chronic Skin & Allergic Inflammatory Conditions
"allergy, obesity", "pruritis", "severe allergies", "atopy", "allergies, chronic otitis",
"chronic hot spots, skin infections", "many pyodera/dermatitis events", "chronic otitis, allergic dermatitis",
"chronic otitis, chronic allergies", "chronic otitis, overweight", "dermatitis", "food allergy",
"skin allergies", "dermatitis lip fold", "seasonal allergies/pyoderma", "atopic dermatitis, allergies",
# Chronic Ocular Inflammation & Degeneration
"glaucoma", "uveitis", "pigmentary uveitis", "persistent pupilary membrane",
"nuclear sclerosis, anterior uveitis, retinal hemorrhage", "bilateral entropion",
# Chronic Endocrine & Metabolic Disorders
"hypothyroidism", "hypothyroid- unconfirmed", "hypothyroidism, chronic lameness, obesity",
"hypothyrodism resolved", "hypothyrodism",
# Chronic Gastrointestinal & Hepatic Disorders
"chronic_colitis", "pancreatitis", "malabsorptive_disorder", "chronic pancreatitis",
"gastric ulcers", "hepatopathy/hepatic nodules of unconfirmed origin",
# Chronic Cardiovascular Diseases
"mild degenerative valve disease", "degenerative mitral and tricuspid valve disease",
"mitral valve disease", "heart base tumor", "heart base mass", "pulmonary thrombosis", "portal vein thrombus",
# Chronic Infectious & Inflammatory Conditions
"ehrlichia", "lyme/anaplasma", "lyme+", "anaplasma and lyme +", "positive anaplasma", "erlichia +", "erlichia",
"bacterial cystitis/recurrent uti", "chronic uti's/ bacterial cystitis", "cystitis", "uti", "frequent utis",
"previous utis", "chronic urinary incontinence", "history of valley fever",
# Chronic Neurological & Cognitive Diseases
"seizures, oa", "hindlimb weakness", "right cerebrum lesion", "cognitive dysfunction",
"meningitis secondary to toxoplasmosis"
)
#now use these lists for making new columns
# Function to detect comorbidities across multiple columns as 2 comorb columns
detect_comorbidity <- function(comorb_list, text1, text2) {
pattern <- paste0("\\b(", paste(comorb_list, collapse = "|"), ")\\b")  # Word boundary regex
return(ifelse(str_detect(text1, regex(pattern, ignore_case = TRUE)) |
str_detect(text2, regex(pattern, ignore_case = TRUE)), "yes", "no"))
}
# Apply function dynamically for multiple comorbidity groups
GRLS_lymphoma <- GRLS_lymphoma%>%
mutate(
!!!map(
list(
chronic_inflammatory = chronic_inflammatory,  # Add more groups if needed
cardiovascular = cardiovascular,
gastrointestinal = gastrointestinal,
endocrine= endocrine,
immune_mediated=immune_mediated,
infectious = infectious,
inflammatory_other=inflammatory_other,
intestinal_parasitism=intestinal_parasitism,
misc=misc,
neoplasia=neoplasia,
neurological=neurological,
ocular=ocular,
orthopaedic=orthopaedic,
other_parasitism=other_parasitism,
respiratory=respiratory,
tick_borne_parasitism=tick_borne_parasitism,
urinary_renal=urinary_renal
),
~ detect_comorbidity(.x, GRLS_lymphoma$Comorbidity.1, GRLS_lymphoma$Comorbidity.2)  # Adjust column names
) %>%
set_names(paste0(names(.), "_comorb_YN"))  # Creates columns like 'chronic_inflammatory_YN'
)
#3 sep columns
table(GRLS_lymphoma$Pre.existing.medication.1)
meds_1 <- unique(GRLS_lymphoma$Pre.existing.medication.1)
table(GRLS_lymphoma$Pre.existing.medication.2)
meds_2 <- unique(GRLS_lymphoma$Pre.existing.medication.2)
table(GRLS_lymphoma$Pre.existing.medication.3)
meds_3 <- unique(GRLS_lymphoma$Pre.existing.medication.3)
#combine all unique
meds_1_2 <- union(setdiff(meds_1, meds_2), setdiff(meds_2, meds_1))
meds_all <- union(setdiff(meds_1_2, meds_3), setdiff(meds_3, meds_1_2))
meds_all
#group according to categories in previous medication grouping work (and these are based off NOAH compendium categories) - automatic classing by chatgpt with prev list provided and then manually checked
anti_inflam <- c(
"rimadyl", "meloxicam", "carprofen", "prednisolone", "prednisolone acetate", "temeril p",
"novox", "ketorolac", "flunixin", "prednisone",
"dexamethasone","trimeprazine tartrate"
)
anti_histamine <- c(
"benadryl", "hydroxyzine", "loratadine", "cetirizine", "chlorphenamine", "meclizine", "fexofenadine",
"clemastine fumarate", "dimenhydrinate", "diphenhydramine"
)
anti_microbials <- c(
"augmention", "amoxicillin, clavulanate potassium", "doxycycline", "amoxicillin",
"clindamycin", "cephalexin", "cefpodoxime", "metronidazole", "cefadroxil", "cylcophosphamide",
"pyridostigmine bromide", "amoxicillin, cefpoderm", "cephalexin for skin infection (staph pseudomonas)"
)
anti_parasites <- c(
"ivermectin, pyrantel pamoate", "afoxolaner", "lufenuron, milbemycin oxime", "milbemycin oxime",
"fluralaner", "fipronil, (s)-methoprene", "milbemycin oxime, spinosad", "fenbendazole",
"pyrantel pamoate", "selamectin", "flumethrin, imidacloprid", "moxidectin", "lufenuron, milbemycin oxime, praziquantel"
)
anti_septics <- c(
"chlorhexidine gluconate", "chlorhexidine gluconate, ophytrium", "chlorhexidine gluconate, ketoconazole",
"chlorhexidine gluconate, climbazole, phytosphingosine", "chlorhexidine gluconate, tris-edta",
"chlorhexidine gluconate, hydrocortisone, tris-edta", "chloroxylenol, lactic acid, salicylic acid",
"colloidal silver", "chloroxylenol, salicylic acid, sodium thiosulfate", "Silver sulfadiazine",
"Gentian violet", "Boric acid", "silver sulfadiazine", "hydrogen peroxide"
)
cardio_respiratory <- c(
"pimobendan", "dextromethorphan hydrobromide, guaifenesin", "enalapril", "homatropine, hydrocodone",
"benazepril hcl", "amlodipine", "sotalol", "spironolactone", "prazosin", "clopidogrel", "mexiletine",
"sildenafil", "dextromethorphan hydrobromide", "guaifenesin", "albuterol sulfate", "pentoxifylline",
"theophylline", "timolol", "amiodarone", "lidocaine", "mexiletine", "propranolol", "terbutaline",
"oxygen", "diltiazem", "Epoetin alfa-epbx", "Tyrosine", "pseudoephedrine", "dimenhydrinate",  "tadalafil"
)
dietary_supplements <- c(
"probiotic", "omega 3", "joint supplement (chondroitin sulfate/glucosamine hcl/msm)",
"digestive supplement", "multivitamin", "butorphanol tartrate", "vitamin b", "taurine", "liver supplement",
"joint supplement (glucosamine hcl)", "urinary tract supplement", "yunnan baiyao", "prebiotic, probiotic",
"joint supplement (other)", "immune support supplement", "calming supplement", "vitamin c", "skin and coat supplement",
"vision supplement", "vitamin d", "cisapride", "l-carnitine", "joint supplement (chondroitin sulfate)", "vitamin k",
"kidney health supplement", "vitamin e", "melatonin", "thyroid support supplement", "liver happy", "omega 3-6-9",
"shen calmer", "turmeric", "calcium", "niacinamide", "l-asparaginase", "unspecified supplement", "vitamin a",
"wei qi booster", "coenzyme q10", "curcumin", "dl-methionine", "flaxseed", "joint supplement (msm)", "kelp",
"omega 3-6", "acetylcysteine", "anal gland supplement", "coprophagia supplement", "digestive supplement, joint supplement (glucosamine hcl/msm), probiotic, skin and coat supplement, vitamins and minerals","apple cider vinegar"
)
diuretics <- c(
"furosemide"
)
enteric <- c(
"maropitant citrate", "famotidine", "sucralfate", "omeprazole", "metoclopramide", "ondansetron",
"apomorphine hcl", "ursodiol", "mirtazapine", "loperamide", "ranitidine", "activated charcoal, bismuth subsalicylate, kaolin, pectin",
"pantoprazole", "activated charcoal", "bismuth subsalicylate", "lactulose", "simethicone", "activated charcoal, kaolin",
"activated charcoal, kaolin, sorbitol", "activated charcoal, sorbitol",  "dolasetron",
"metoclopramide", "ondansetron", "cerenia", "maropitant citrate", "crofelemer", "cimetidine",
"aluminium hydroxide, magnesium hydroxide, simethicone", "diphemanil metilsulfate", "aluminium hydroxide"
)
fluid_metabolites <- c(
"lactated ringer's solution", "plasma-lyte", "electrolyte injection", "sodium chloride", "dextrose",
"whole blood transfusion", "iron dextran", "platelet transfusion", "donor lymphocyte infusion (dli)",
"hydroxyethyl starch, sodium chloride", "potassium chloride", "plasma", "magnesium", "potassium chloride",
"sodium chloride", "calcium carbonate", "saline", "hypertonic saline", "unspecified fluid therapy", "phosphorus",
"sodium"
)
hormones_and_related <- c(
"levothyroxine", "thryoxine", "diethylstilbestrol", "oxytocin", "trilostane", "estriol", "pyridostigmine bromide",
"finasteride", "aglepristone", "nph insulin", "megestrol acetate", "cabergoline", "thyroxine",  "fludrocortisone",
"leflunomide", "paroxetine", "metformin", "desmopressin acetate", "cosyntropin", "bethanechol", "epinephrine",
"pamidronate", "thiamazole", "Silver sulfadiazine, insulin", "Epoetin alfa-epbx", "insulin", "epoetin alfa-epbx",
"melatonin", "oxytocin", "progesterone", "dinoprost tromethamine", "silver sulfadiazine, insulin", "mibolerone",
"fuzapladib sodium", "misoprostol"
)
neurological <- c(
"gabapentin", "tramadol", "trazodone", "acepromazine", "fluoxetine", "dexmedetomidine", "propofol",
"alprazolam", "levetiracetam", "phenobarbital", "buprenorphine", "ketamine", "diazepam", "midazolam",
"hydromorphone", "zonisamide", "hydrocodone", "isoflurane", "capromorelin", "amantadine", "potassium bromide",
"atipamezole", "morphine", "tiletamine, zolazepam", "clomipramine", "codeine", "fentanyl", "methadone",
"lidocaine", "amitriptyline", "diphenoxylate", "pramoxine", "sevoflurane", "bupivacaine", "glycopyrrolate",
"alfaxalone", "aminopentamide hydrogen sulfate", "trimeprazine tartrate", "acepromazine, atropine sulfate, butorphanol tartrate",
"acepromazine, hydromorphone", "acepromazine, ketamine", "acetaminophen", "acetaminophen, hydrocodone", "oxycodone",
"sertraline", "xylazine", "butorphanol tartrate", "gabapentin", "acetaminophen", "methadone", "buprenorphine",
"hydromorphone", "tramadol", "fentanyl", "buspirone", "paroxetine", "doxepin", "clonazepam", "lorazepam",
"sertraline", "escitalopram", "fluoxetine", "amitriptyline", "mirtazapine", "butorphanol tartrate, dexmedetomidine",
"ketamine, xylazine", "pregabalin", "belladonna alkaloids, phenobarbital", "Clorazepate", "dimethyl sulfoxide",
"clorazepate", "butorphanol tartrate", "betamethasone, gentamicin sulfate, miconazole nitrate", "tramadol",
"gabapentin", "diazepam", "carbamazepine", "phenobarbital", "bupivacaine, lidocaine", "phenobarbital, potassium bromide",
"butorphanol tartrate, dexmedetomidine, tiletamine, zolazepam", "menthol, lidocaine", "hydrocortisone, pramoxine",
"felbamate", "gabapentin, trazodone", "tramadol", "trazodone","acepromazine", "butorphanol", "buprenorphine", "amitriptyline","cymbalta"
)
immunologicals <- c(
"oclacitinib", "lokivetmab", "bedinvetmab", "cyclosporine", "chlorambucil", "cyclophosphamide", "doxorubicin",
"azathioprine", "vincristine", "sulfasalazine", "lomustine", "mycophenolate mofetil", "tacrolimus",
"anti-cd52 monoclonal antibodies", "procarbazine", "vinblastine", "melphalan", "carboplatin", "temozolomide",
"dactinomycin", "cyclophosphamide", "doxorubicin", "vincristine", "cisplatin", "melanoma vaccine", "egft/her2",
"imatinib", "chop protocol (cyclophosphamide/doxorubicin/prednisone/vincristine)", "trametinib", "lapatinib",
"elspar", "vorinostat", "verdinexor", "vinorelbine", "masitinib", "tigilanol tiglate"
)
#modify comorb funct to handle >2 cols
detect_comorbidity2 <- function(comorb_list, text1, text2,text3) {
pattern <- paste0("\\b(", paste(comorb_list, collapse = "|"), ")\\b")  # Word boundary regex
return(ifelse(str_detect(text1, regex(pattern, ignore_case = TRUE)) |
str_detect(text2, regex(pattern, ignore_case = TRUE))|
str_detect(text3, regex(pattern, ignore_case = TRUE)), "yes", "no"))
}
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate(
!!!map(
list(
anti_inflam = anti_inflam,  # Add more groups if needed
anti_histamine = anti_histamine,
anti_microbials = anti_microbials,
anti_septics = anti_septics,
anti_parasites = anti_parasites,
cardio_respiratory = cardio_respiratory,
diuretics = diuretics,
enteric = enteric,
fluid_metabolites = fluid_metabolites,
hormones_and_related = hormones_and_related,
neurological = neurological,
immunologicals = immunologicals
),
# Using the updated detect_comorbidity function
~ detect_comorbidity2(.x, GRLS_lymphoma$Pre.existing.medication.1, GRLS_lymphoma$Pre.existing.medication.2, GRLS_lymphoma$Pre.existing.medication.3)  # Adjust column names
) %>%
set_names(paste0(names(.), "_medication_YN"))  # Creates columns like 'chronic_inflammatory_YN'
)
table(GRLS_lymphoma$Necropsy.findings..free.text.)
table(GRLS_lymphoma$BCS.at.death)
table(GRLS_lymphoma$BCS.at.diagnosis)
#checking across all _YN columns that there is only Y/N/NR/NA type answers
#for comorb and drug cols and necropsy locations- NAs and empty cells replaced with not recorded
#replace all NAs with not recorded
#all columns
write.csv(GRLS_lymphoma, "C:/Users/ctaylor18/OneDrive - Royal Veterinary College/post doc/GRLS/GRLS lymphoma RP2 projects/clinical_records_coding_compiled_CT_tidy.csv")
#tidied dataset
GRLS_lymphoma_tidy  <- GRLS_lymphoma %>%
dplyr::select(c())
#convert all to be in this : format so replace "out of" with :
GRLS_lymphoma$BCS.at.diagnosis2 <- gsub(" out of ", ":", GRLS_lymphoma$BCS.at.diagnosis)
GRLS_lymphoma$BCS.at.death2 <- gsub(" out of ", ":", GRLS_lymphoma$BCS.at.death)
table(GRLS_lymphoma$BCS.at.death)
table(GRLS_lymphoma$BCS.at.diagnosis)
table(GRLS_lymphoma$BCS.at.death2)
table(GRLS_lymphoma$BCS.at.diagnosis2)
GRLS_lymphoma$BCS.at.diagnosis2 <- sapply(GRLS_lymphoma$BCS.at.diagnosis2, function(x) {
if (grepl("-", x)) {
# If there's a hyphen, calculate the average
numbers <- as.numeric(unlist(strsplit(sub(":.*", "", x), "-")))
avg <- mean(numbers)
# Replace the range with the average
sub("^.*?\\d+-\\d+", round(avg, 1), x)
} else {
# Otherwise, just return the string as is
return(x)
}
})
table(GRLS_lymphoma$BCS.at.diagnosis2)
GRLS_lymphoma$BCS.at.diagnosis2 <- gsub("(\\d+)", sprintf("%02d", as.integer("\\1")), GRLS_lymphoma$BCS.at.diagnosis2)
table(GRLS_lymphoma$BCS.at.diagnosis2)
table(GRLS_lymphoma$BCS.at.death)
table(GRLS_lymphoma$BCS.at.diagnosis)
#convert all to be in this : format so replace "out of" with :
GRLS_lymphoma$BCS.at.diagnosis2 <- gsub(" out of ", ":", GRLS_lymphoma$BCS.at.diagnosis)
GRLS_lymphoma$BCS.at.death2 <- gsub(" out of ", ":", GRLS_lymphoma$BCS.at.death)
GRLS_lymphoma$BCS.at.diagnosis2 <- sapply(GRLS_lymphoma$BCS.at.diagnosis2, function(x) {
if (grepl("-", x)) {
# If there's a hyphen, calculate the average
numbers <- as.numeric(unlist(strsplit(sub(":.*", "", x), "-")))
avg <- mean(numbers)
# Replace the range with the average
sub("^.*?\\d+-\\d+", round(avg, 1), x)
} else {
# Otherwise, just return the string as is
return(x)
}
})
GRLS_lymphoma$BCS.at.death2 <- sapply(GRLS_lymphoma$BCS.at.death2, function(x) {
if (grepl("-", x)) {
# If there's a hyphen, calculate the average
numbers <- as.numeric(unlist(strsplit(sub(":.*", "", x), "-")))
avg <- mean(numbers)
# Replace the range with the average
sub("^.*?\\d+-\\d+", round(avg, 1), x)
} else {
# Otherwise, just return the string as is
return(x)
}
})
GRLS_lymphoma2 <- GRLS_lymphoma %>%
mutate_all(~replace(., is.na(.), "not_recorded"))
colnames(GRLS_lymphoma2)
write.csv(GRLS_lymphoma, "C:/Users/ctaylor18/OneDrive - Royal Veterinary College/post doc/GRLS/GRLS lymphoma RP2 projects/clinical_records_coding_compiled_CT_tidy_and_original_columns.csv")
#tidied dataset
GRLS_lymphoma_tidy  <- GRLS_lymphoma2 %>%
dplyr::select(c(PatientID,Lymphoma.confirmed.with.necropsy.histology.cytology,Weight.at.diagnosis..kg.,Weight.at.death.kg.,BCS.at.diagnosis2,BCS.at.death2,first_pres_date,defin_date,neut_date,OR_signs_date,final_chemo_date,final_record_date_any,age_defin_diagnosis_y,age_first_pres_y,age_at_neuter_y,age_final_record_y,age_final_chemo_y,diagnosis_to_final_chemo_time,symptoms_to_first_pres,symptoms_to_defin_diagnosis,neuter_diagnosis_tidy,sex_tidy,mechanism_of_death_tidy,147:239))
View(GRLS_lymphoma_tidy)
subset_df <- GRLS_lymphoma[, c(119:127,140:239)]
View(subset_df)
print(subset_df)
summary(subset_df)
GRLS_lymphoma <- GRLS_lymphoma %>%
mutate_all(~replace(., is.na(.), "not_recorded"))
#all columns
write.csv(GRLS_lymphoma, "C:/Users/ctaylor18/OneDrive - Royal Veterinary College/post doc/GRLS/GRLS lymphoma RP2 projects/clinical_records_coding_compiled_CT_tidy_and_original_columns.csv")
#tidied dataset
GRLS_lymphoma_tidy  <- GRLS_lymphoma2 %>%
dplyr::select(c(PatientID,Lymphoma.confirmed.with.necropsy.histology.cytology,Weight.at.diagnosis..kg.,Weight.at.death.kg.,BCS.at.diagnosis2,BCS.at.death2,first_pres_date,defin_date,neut_date,OR_signs_date,final_chemo_date,final_record_date_any,age_defin_diagnosis_y,age_first_pres_y,age_at_neuter_y,age_final_record_y,age_final_chemo_y,diagnosis_to_final_chemo_time,symptoms_to_first_pres,symptoms_to_defin_diagnosis,neuter_diagnosis_tidy,sex_tidy,mechanism_of_death_tidy,117,119:127,147:239))
write.csv(GRLS_lymphoma_tidy, "C:/Users/ctaylor18/OneDrive - Royal Veterinary College/post doc/GRLS/GRLS lymphoma RP2 projects/clinical_records_coding_compiled_CT_tidy.csv")
