library(survival)
library(ggplot2)
library(tibble)
library(kableExtra)
#devtools::install_github("zabore/ezfun")
ezfun::set_ccf_palette("contrast")
library(lubridate)
library(ggsurvfit)
library(gtsummary)
library(tidycmprsk)
library(gtable)
#devtools::install_github("zabore/condsurv")
library(condsurv)
library(survminer)
library(cardx)
library(finalfit)
#load in dataset
cohort <- read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/HSA_cohort_all_RFs_data_tidied2.csv")
colnames(cohort)
cohort <- cohort %>%
dplyr::select(-c(X,X.x))
HSA <- cohort %>%
dplyr::filter(had_HSA==1)
non_HSA <- cohort %>%
dplyr::filter(had_HSA==0)
cohort$age_at_final_date <- as.numeric(cohort$age_at_final_date)
summary(cohort$age_at_final_date)
summary(HSA$age_at_final_date)
summary(non_HSA$age_at_final_date)
age_summary <- cohort %>%
summarise(
Mean  = mean(age_at_final_date),
SD = sd(age_at_final_date),
Median = median(age_at_final_date),
LQ = quantile(age_at_final_date, 0.25),
UQ = quantile(age_at_final_date, 0.75),
Min = min(age_at_final_date),
Max = max(age_at_final_date)
)
age_summary
cohort <- cohort %>%
mutate(
age_at_final_date_quartiles = case_when(
(age_at_final_date < age_summary$LQ) ~ "0.74-<8.47 years",
(age_at_final_date >= age_summary$LQ & age_at_final_date < age_summary$Median) ~ ">=8.47-<10.68 years",
(age_at_final_date >= age_summary$Median & age_at_final_date < age_summary$UQ) ~ ">=10.68-<11.64 years",
(age_at_final_date >= age_summary$UQ) ~ ">=11.64-14.51 years",
)
)
cross_table <- table(cohort$had_HSA,cohort$age_at_final_date_quartiles)
cross_table_percent <- prop.table(cross_table) * 100
print(cross_table)
print(cross_table_percent)
cross_table <- table(cohort$had_HSA,cohort$neuter)
cross_table_percent <- prop.table(cross_table) * 100
print(cross_table)
print(cross_table_percent)
cross_table <- table(cohort$had_HSA,cohort$sex_status)
# Get column-wise percentages
cross_table_percent <- prop.table(cross_table, margin = 1) * 100
print(cross_table)
print(cross_table_percent)
cross_table <- table(cohort$had_HSA,cohort$sex)
cross_table_percent <- prop.table(cross_table, margin = 1) * 100
print(cross_table)
print(cross_table_percent)
#tidy up redundant cols - not wanted for univar and those that are essentially duplicats
cohort_abr <- cohort %>%
dplyr::select(c(1,2,5:14,25,226,227,229,230,234,"study_year_first_chronic_inflam", "chronic_inflam_present_5y", "number_comorbs_present_5y",
"chronic_inflam_present_no_min_year", "number_comorbs_present_no_min_year",  "diagnosis_after_comorb",  "time_between_first_comorb_and_endpoint",
"num_lifetime_chronic_inflam",248:377,381,383:456,458,460,"avg_purina_BCS_5y_prior_endpoint",final_date.y,"age_at_final_date_quartiles"))
#also need to add in a survival time variable (days/weeks/months/years)
enrol_date <-read.csv("C:/Users/ctaylor18/GitHub/GRLS_analyses/Data/dog_profile.csv")
enrol_date <- enrol_date %>%
dplyr::select(c(subject_id, enrolled_date))
cohort_abr<- cohort_abr%>%
left_join(enrol_date,by="subject_id")
cohort_abr <- cohort_abr %>%
mutate(final_date =as.Date(final_date.y,format="%Y-%m-%d"),
enrolled_date = as.Date(enrolled_date,format="%Y-%m-%d") )
#survival time days
#survival time weeks
#survival time months
#survival time years
cohort_abr <- cohort_abr %>%
mutate(
survival_time_days2 = round(as.numeric(difftime(final_date, enrolled_date, units = "days")), 2),
survival_time_weeks = round(as.numeric(difftime(final_date, enrolled_date, units = "weeks")), 2),
survival_time_months = round(time_length(interval(enrolled_date, final_date), "months"), 2),
survival_time_year = round(time_length(interval(enrolled_date, final_date), "years"), 2)
)
summary(cohort_abr$survival_time_days2)
summary(cohort_abr$survival_time_weeks)
summary(cohort_abr$survival_time_months)
summary(cohort_abr$survival_time_year)
# set HSA status as numeric for KM curves
cohort_abr$had_HSA <-as.numeric(cohort_abr$had_HSA)
#purina BCS average
cohort_abr$avg_purina_BCS_5y_prior_endpoint
bcs_summary <- cohort_abr %>%
summarise(
Mean  = mean(avg_purina_BCS_5y_prior_endpoint,na.rm=T),
SD = sd(avg_purina_BCS_5y_prior_endpoint,na.rm=T),
Median = median(avg_purina_BCS_5y_prior_endpoint,na.rm=T),
LQ = quantile(avg_purina_BCS_5y_prior_endpoint, 0.25,na.rm=T),
UQ = quantile(avg_purina_BCS_5y_prior_endpoint, 0.75,na.rm=T),
Min = min(avg_purina_BCS_5y_prior_endpoint,na.rm=T),
Max = max(avg_purina_BCS_5y_prior_endpoint,na.rm=T)
)
bcs_summary
cohort_abr <- cohort_abr %>%
mutate(
avg_purina_BCS_5y_prior_endpoint_quartiles = case_when(
(avg_purina_BCS_5y_prior_endpoint < bcs_summary$LQ) ~ "3.3-<5",
(avg_purina_BCS_5y_prior_endpoint >= bcs_summary$LQ & avg_purina_BCS_5y_prior_endpoint < bcs_summary$Median) ~ ">=5-<5.28",
(avg_purina_BCS_5y_prior_endpoint >= bcs_summary$Median & avg_purina_BCS_5y_prior_endpoint < bcs_summary$UQ) ~ ">=5.28-<5.86",
(avg_purina_BCS_5y_prior_endpoint>= bcs_summary$UQ) ~ ">=5.86 - 9",
)
)
#weight quartiles
weight_summary <- cohort_abr %>%
summarise(
Mean  = mean(avg_weight_5y_prior_endpoint_kg_outliers_removed,na.rm=T),
SD = sd(avg_weight_5y_prior_endpoint_kg_outliers_removed,na.rm=T),
Median = median(avg_weight_5y_prior_endpoint_kg_outliers_removed,na.rm=T),
LQ = quantile(avg_weight_5y_prior_endpoint_kg_outliers_removed, 0.25,na.rm=T),
UQ = quantile(avg_weight_5y_prior_endpoint_kg_outliers_removed, 0.75,na.rm=T),
Min = min(avg_weight_5y_prior_endpoint_kg_outliers_removed,na.rm=T),
Max = max(avg_weight_5y_prior_endpoint_kg_outliers_removed,na.rm=T)
)
weight_summary
cohort_abr <- cohort_abr %>%
mutate(
avg_weight_5y_prior_endpoint_quartiles = case_when(
(avg_weight_5y_prior_endpoint_kg_outliers_removed < weight_summary$LQ) ~ "9.75-<21.31kg",
(avg_weight_5y_prior_endpoint_kg_outliers_removed >= weight_summary$LQ & avg_weight_5y_prior_endpoint_kg_outliers_removed < weight_summary$Median) ~ ">=21.31-<24.66kg",
(avg_weight_5y_prior_endpoint_kg_outliers_removed >= weight_summary$Median & avg_weight_5y_prior_endpoint_kg_outliers_removed < weight_summary$UQ) ~ ">=24.66-<29.37kg",
(avg_weight_5y_prior_endpoint_kg_outliers_removed>= weight_summary$UQ) ~ ">=29.37-41.52kg",
)
)
#hieght quartiles
height_summary <- cohort_abr %>%
summarise(
Mean  = mean(avg_height_5y_prior_endpoint_cm_outliers_removed,na.rm=T),
SD = sd(avg_height_5y_prior_endpoint_cm_outliers_removed,na.rm=T),
Median = median(avg_height_5y_prior_endpoint_cm_outliers_removed,na.rm=T),
LQ = quantile(avg_height_5y_prior_endpoint_cm_outliers_removed, 0.25,na.rm=T),
UQ = quantile(avg_height_5y_prior_endpoint_cm_outliers_removed, 0.75,na.rm=T),
Min = min(avg_height_5y_prior_endpoint_cm_outliers_removed,na.rm=T),
Max = max(avg_height_5y_prior_endpoint_cm_outliers_removed,na.rm=T)
)
height_summary
cohort_abr <- cohort_abr %>%
mutate(
avg_height_5y_prior_endpoint_quartiles = case_when(
(avg_height_5y_prior_endpoint_cm_outliers_removed< height_summary$LQ) ~ "49.13-<56.07cm",
(avg_height_5y_prior_endpoint_cm_outliers_removed >= height_summary$LQ & avg_height_5y_prior_endpoint_cm_outliers_removed < height_summary$Median) ~ ">=56.07-<58.42cm",
(avg_height_5y_prior_endpoint_cm_outliers_removed >= height_summary$Median & avg_height_5y_prior_endpoint_cm_outliers_removed< height_summary$UQ) ~ ">=58.42-<60.32cm",
(avg_height_5y_prior_endpoint_cm_outliers_removed>= height_summary$UQ) ~ ">=60.32cm-67.73cm",
)
)
#age at neuter quartiles
neut_summary <- cohort_abr %>%
summarise(
Mean  = mean(age_at_neuter_years,na.rm=T),
SD = sd(age_at_neuter_years,na.rm=T),
Median = median(age_at_neuter_years,na.rm=T),
LQ = quantile(age_at_neuter_years, 0.25,na.rm=T),
UQ = quantile(age_at_neuter_years, 0.75,na.rm=T),
Min = min(age_at_neuter_years,na.rm=T),
Max = max(age_at_neuter_years,na.rm=T)
)
neut_summary
cohort_abr <- cohort_abr %>%
mutate(
age_at_neuter_years_quartiles = case_when(
#so that entire dogs dont end up coded as Not_recorded
neuter == "Entire" ~ "Entire",
(age_at_neuter_years< neut_summary$LQ) ~ "0.15-<0.52y",
(age_at_neuter_years >= neut_summary$LQ & age_at_neuter_years < neut_summary$Median) ~ ">=0.52-<0.83y",
(age_at_neuter_years >= neut_summary$Median & age_at_neuter_years < neut_summary$UQ) ~ ">=0.83-2.44y",
(age_at_neuter_years>= neut_summary$UQ) ~ ">=2.44-9.59y",
)
)
#hours of smoke - not worth quartiling as so many are 0
smoke_5y_summary <- cohort_abr %>%
filter(hours_of_smoke_exposure_hours_5yrs_prior > 0) %>%
summarise(
Mean  = mean(hours_of_smoke_exposure_hours_5yrs_prior,na.rm=T),
SD = sd(hours_of_smoke_exposure_hours_5yrs_prior,na.rm=T),
Median = median(hours_of_smoke_exposure_hours_5yrs_prior,na.rm=T),
LQ = quantile(hours_of_smoke_exposure_hours_5yrs_prior, 0.25,na.rm=T),
UQ = quantile(hours_of_smoke_exposure_hours_5yrs_prior, 0.75,na.rm=T),
Min = min(hours_of_smoke_exposure_hours_5yrs_prior,na.rm=T),
Max = max(hours_of_smoke_exposure_hours_5yrs_prior,na.rm=T),
T1 = quantile(hours_of_smoke_exposure_hours_5yrs_prior, 1/3, na.rm = TRUE),  # First tercile (33.3%)
T2 = quantile(hours_of_smoke_exposure_hours_5yrs_prior, 2/3, na.rm = TRUE)   # Second
)
smoke_5y_summary
cohort_abr <- cohort_abr %>%
mutate(
hours_of_smoke_exposure_hours_5yrs_prior_terciles = case_when(
hours_of_smoke_exposure_hours_5yrs_prior == 0 ~ "no_smoke",
hours_of_smoke_exposure_hours_5yrs_prior >= smoke_5y_summary$Min & hours_of_smoke_exposure_hours_5yrs_prior < smoke_5y_summary$T1 ~ ">0-<4h",
hours_of_smoke_exposure_hours_5yrs_prior >= smoke_5y_summary$T1 & hours_of_smoke_exposure_hours_5yrs_prior < smoke_5y_summary$T2 ~ ">=4-<14h",
hours_of_smoke_exposure_hours_5yrs_prior >= smoke_5y_summary$T2 ~ ">=14-368h",
TRUE ~ NA_character_  # Handles any unexpected values
)
)
#smoke early years
cohort_abr$hours_of_smoke_early_life_total_dosage <- as.numeric(cohort_abr$hours_of_smoke_early_life_total_dosage)
smoke_early_summary <- cohort_abr %>%
filter(hours_of_smoke_early_life_total_dosage > 0) %>%
summarise(
Mean  = mean(hours_of_smoke_early_life_total_dosage,na.rm=T),
SD = sd(hours_of_smoke_early_life_total_dosage,na.rm=T),
Median = median(hours_of_smoke_early_life_total_dosage,na.rm=T),
LQ = quantile(hours_of_smoke_early_life_total_dosage, 0.25,na.rm=T),
UQ = quantile(hours_of_smoke_early_life_total_dosage, 0.75,na.rm=T),
Min = min(hours_of_smoke_early_life_total_dosage,na.rm=T),
Max = max(hours_of_smoke_early_life_total_dosage,na.rm=T),
T1 = quantile(hours_of_smoke_early_life_total_dosage, 1/3, na.rm = TRUE),  # First tercile (33.3%)
T2 = quantile(hours_of_smoke_early_life_total_dosage, 2/3, na.rm = TRUE)   # Second
)
smoke_early_summary
cohort_abr <- cohort_abr %>%
mutate(
hours_of_smoke_early_life_total_dosage_terciles = case_when(
hours_of_smoke_early_life_total_dosage == 0 ~ "no_smoke",
hours_of_smoke_early_life_total_dosage >= smoke_early_summary$Min & hours_of_smoke_early_life_total_dosage < smoke_early_summary$T1 ~ ">0-<2h",
hours_of_smoke_early_life_total_dosage>= smoke_early_summary$T1 & hours_of_smoke_early_life_total_dosage < smoke_early_summary$T2 ~ ">=2-<7h",
hours_of_smoke_early_life_total_dosage >= smoke_early_summary$T2 ~ ">=7-72h",
TRUE ~ NA_character_  # Handles any unexpected values
)
)
#smoke rest of life
cohort_abr$hours_of_smoke_rest_of_life_total_dosage <- as.numeric(cohort_abr$hours_of_smoke_rest_of_life_total_dosage)
smoke_rest_summary <- cohort_abr %>%
filter(hours_of_smoke_rest_of_life_total_dosage > 0) %>%
summarise(
Mean  = mean(hours_of_smoke_rest_of_life_total_dosage,na.rm=T),
SD = sd(hours_of_smoke_rest_of_life_total_dosage,na.rm=T),
Median = median(hours_of_smoke_rest_of_life_total_dosage,na.rm=T),
LQ = quantile(hours_of_smoke_rest_of_life_total_dosage, 0.25,na.rm=T),
UQ = quantile(hours_of_smoke_rest_of_life_total_dosage, 0.75,na.rm=T),
Min = min(hours_of_smoke_rest_of_life_total_dosage,na.rm=T),
Max = max(hours_of_smoke_rest_of_life_total_dosage,na.rm=T),
T1 = quantile(hours_of_smoke_rest_of_life_total_dosage, 1/3, na.rm = TRUE),  # First tercile (33.3%)
T2 = quantile(hours_of_smoke_rest_of_life_total_dosage, 2/3, na.rm = TRUE)   # Second
)
smoke_rest_summary
cohort_abr <- cohort_abr %>%
mutate(
hours_of_smoke_rest_of_life_total_dosage_terciles = case_when(
hours_of_smoke_rest_of_life_total_dosage == 0 ~ "no_smoke",
hours_of_smoke_rest_of_life_total_dosage >= smoke_rest_summary$Min & hours_of_smoke_rest_of_life_total_dosage < smoke_rest_summary$T1 ~ ">0-<2h",
hours_of_smoke_rest_of_life_total_dosage >= smoke_rest_summary$T1 & hours_of_smoke_rest_of_life_total_dosage < smoke_rest_summary$T2 ~ ">=2-<9h",
hours_of_smoke_rest_of_life_total_dosage >= smoke_rest_summary$T2 ~ ">=9-378h",
TRUE ~ NA_character_  # Handles any unexpected values
)
)
#smoke whole life
cohort_abr$hours_of_smoke_whole_life_total_dosage <- as.numeric(cohort_abr$hours_of_smoke_whole_life_total_dosage)
smoke_whole_summary <- cohort_abr %>%
filter(hours_of_smoke_whole_life_total_dosage > 0) %>%
summarise(
Mean  = mean(hours_of_smoke_whole_life_total_dosage,na.rm=T),
SD = sd(hours_of_smoke_whole_life_total_dosage,na.rm=T),
Median = median(hours_of_smoke_whole_life_total_dosage,na.rm=T),
LQ = quantile(hours_of_smoke_whole_life_total_dosage, 0.25,na.rm=T),
UQ = quantile(hours_of_smoke_whole_life_total_dosage, 0.75,na.rm=T),
Min = min(hours_of_smoke_whole_life_total_dosage,na.rm=T),
Max = max(hours_of_smoke_whole_life_total_dosage,na.rm=T),
T1 = quantile(hours_of_smoke_whole_life_total_dosage, 1/3, na.rm = TRUE),  # First tercile (33.3%)
T2 = quantile(hours_of_smoke_whole_life_total_dosage, 2/3, na.rm = TRUE)   # Second
)
smoke_whole_summary
cohort_abr <- cohort_abr %>%
mutate(
hours_of_smoke_whole_life_total_dosage_terciles = case_when(
hours_of_smoke_whole_life_total_dosage == 0 ~ "no_smoke",
hours_of_smoke_whole_life_total_dosage>= smoke_whole_summary$Min & hours_of_smoke_whole_life_total_dosage< smoke_whole_summary$T1 ~ ">0-<2h",
hours_of_smoke_whole_life_total_dosage >= smoke_whole_summary$T1 & hours_of_smoke_whole_life_total_dosage < smoke_whole_summary$T2 ~ ">=2-<10h",
hours_of_smoke_whole_life_total_dosage >= smoke_whole_summary$T2 ~ ">=10-388h",
TRUE ~ NA_character_  # Handles any unexpected values
)
)
# num bred before neutering
num_breed_summary <- cohort_abr %>%
filter(num_breeding_before_neutering > 0) %>%  # Exclude 0 values
summarise(
Mean  = mean(num_breeding_before_neutering, na.rm = TRUE),
SD = sd(num_breeding_before_neutering, na.rm = TRUE),
Median = median(num_breeding_before_neutering, na.rm = TRUE),
LQ = quantile(num_breeding_before_neutering, 0.25, na.rm = TRUE),
UQ = quantile(num_breeding_before_neutering, 0.75, na.rm = TRUE),
Min = min(num_breeding_before_neutering, na.rm = TRUE),
Max = max(num_breeding_before_neutering, na.rm = TRUE),
T1 = quantile(num_breeding_before_neutering, 1/3, na.rm = TRUE),  # First tercile (33.3%)
T2 = quantile(num_breeding_before_neutering, 2/3, na.rm = TRUE)   # Second tercile (66.6%)
)
num_breed_summary
cohort_abr <- cohort_abr %>%
mutate(
num_breeding_before_neutering_quartiles= case_when(
num_breeding_before_neutering == 0 ~ "not_bred",
num_breeding_before_neutering >= num_breed_summary$Min & num_breeding_before_neutering < num_breed_summary$LQ ~ "1-<3",
num_breeding_before_neutering >= num_breed_summary$LQ & num_breeding_before_neutering < num_breed_summary$Median ~ ">=3-<6",
num_breeding_before_neutering >= num_breed_summary$Median & num_breeding_before_neutering <num_breed_summary$UQ~ ">=6-14",
num_breeding_before_neutering >= num_breed_summary$UQ ~">=14-142",
TRUE ~ NA_character_  # Handles any unexpected values
)
)
#group US states
table(cohort_abr$state_mode_5yrs_prior)
# Define state abbreviations grouped by region (all lowercase)
northeast <- c("ct", "me", "ma", "nh", "nj", "ny", "pa", "ri", "vt")
midwest <- c("il", "in", "ia", "ks", "mi", "mn", "mo", "ne", "nd", "oh", "sd", "wi")
south <- c("al", "ar", "de", "fl", "ga", "ky", "la", "md", "ms", "nc", "ok", "sc", "tn", "tx", "va", "wv")
west <- c("az", "ca", "co", "id", "mt", "nv", "nm", "or", "ut", "wa", "wy")
# Assuming your dataframe is called df and the state column is `state`
cohort_abr <- cohort_abr %>%
mutate(region_mode_5y_prior = case_when(
state_mode_5yrs_prior %in% northeast ~ "northeast",
state_mode_5yrs_prior %in% midwest ~ "midwest",
state_mode_5yrs_prior %in% south ~ "south",
state_mode_5yrs_prior %in% west ~ "west",
TRUE ~ "unknown"  # Handle any unexpected values
))
# exercise intensity
#5y prior to endpoint
cohort_abr$avg_intensity_5y_prior_endpoint <-as.numeric(cohort_abr$avg_intensity_5y_prior_endpoint)
int_summary <- cohort_abr %>%
summarise(
Mean  = mean(avg_intensity_5y_prior_endpoint,na.rm=T),
SD = sd(avg_intensity_5y_prior_endpoint,na.rm=T),
Median = median(avg_intensity_5y_prior_endpoint,na.rm=T),
LQ = quantile(avg_intensity_5y_prior_endpoint, 0.25,na.rm=T),
UQ = quantile(avg_intensity_5y_prior_endpoint, 0.75,na.rm=T),
Min = min(avg_intensity_5y_prior_endpoint,na.rm=T),
Max = max(avg_intensity_5y_prior_endpoint,na.rm=T)
)
int_summary
cohort_abr <- cohort_abr %>%
mutate(
avg_intensity_5y_prior_endpoint_quartiles = case_when(
(avg_intensity_5y_prior_endpoint< int_summary$LQ) ~ "0-<50",
(avg_intensity_5y_prior_endpoint >= int_summary$LQ & avg_intensity_5y_prior_endpoint < int_summary$Median) ~ ">=50-<61",
(avg_intensity_5y_prior_endpoint>= int_summary$Median & avg_intensity_5y_prior_endpoint < int_summary$UQ) ~ ">=61-<68.9",
(avg_intensity_5y_prior_endpoint>= int_summary$UQ) ~ ">=68.9-100",
)
)
# activity frequency
#early
#attempting dynamic labelling for these quartiles
# Compute quartiles dynamically
# Function to calculate quartiles or terciles dynamically
get_breaks <- function(x, probs) {
breaks <- quantile(x, probs = probs, na.rm = TRUE)
# If breaks are not unique, switch to terciles
if (length(unique(breaks)) < length(probs)) {
message("Quartiles not unique, switching to terciles.")
breaks <- quantile(x, probs = c(0, 1/3, 2/3, 1), na.rm = TRUE)
}
return(breaks)
}
# Calculate quartiles first, switch to terciles if needed
breaks <- get_breaks(cohort_abr$avg_activity_freq_sy1_2, c(0, 0.25, 0.5, 0.75, 1))
# Assign labels dynamically
labels <- paste0("≥", round(head(breaks, -1), 2), " - <", round(tail(breaks, -1), 2))
# Apply the breaks using `cut()`
cohort_abr <- cohort_abr %>%
mutate(avg_activity_freq_sy1_2_terciles = cut(avg_activity_freq_sy1_2,
breaks = breaks,
include.lowest = TRUE,
labels = labels))
# Check output
table(cohort_abr$avg_activity_freq_sy1_2_terciles)
#rest
# Calculate quartiles first, switch to terciles if needed
cohort_abr$avg_activity_freq_sy3 <- as.numeric(cohort_abr$avg_activity_freq_sy3)
breaks <- get_breaks(cohort_abr$avg_activity_freq_sy3, c(0, 0.25, 0.5, 0.75, 1))
# Assign labels dynamically
labels <- paste0("≥", round(head(breaks, -1), 2), " - <", round(tail(breaks, -1), 2))
# Apply the breaks using `cut()`
cohort_abr <- cohort_abr %>%
mutate(avg_activity_freq_sy3_terciles = cut(avg_activity_freq_sy3,
breaks = breaks,
include.lowest = TRUE,
labels = labels))
# Check output
table(cohort_abr$avg_activity_freq_sy3_terciles)
## intensity
#sy1_2
# Calculate quartiles first, switch to terciles if needed - not enough breaks for this one
#cohort_abr$avg_activity_intensity_sy1_2 <- as.numeric(cohort_abr$avg_activity_intensity_sy1_2)
#breaks <- get_breaks(cohort_abr$avg_activity_intensity_sy1_2, c(0, 0.25, 0.5, 0.75, 1))
# Assign labels dynamically
#labels <- paste0("≥", round(head(breaks, -1), 2), " - <", round(tail(breaks, -1), 2))
# Apply the breaks using `cut()`
#cohort_abr <- cohort_abr %>%
#  mutate(avg_activity_intensity_sy1_2_terciles = cut(avg_activity_intensity_sy1_2,
#                 breaks = breaks,
#                 include.lowest = TRUE,
#                labels = labels))
# Check output
#table(cohort_abr$avg_activity_intensity_sy1_2_terciles)
#sy3+
cohort_abr$avg_activity_intensity_sy3 <- as.numeric(cohort_abr$avg_activity_intensity_sy3)
breaks <- get_breaks(cohort_abr$avg_activity_intensity_sy3, c(0, 0.25, 0.5, 0.75, 1))
# Assign labels dynamically
labels <- paste0("≥", round(head(breaks, -1), 2), " - <", round(tail(breaks, -1), 2))
# Apply the breaks using `cut()`
cohort_abr <- cohort_abr %>%
mutate(avg_activity_intensity_sy3_quartiles = cut(avg_activity_freq_sy3,
breaks = breaks,
include.lowest = TRUE,
labels = labels))
#frequency
#SY1-2
cohort_abr$avg_activity_freq_sy1_2 <- as.numeric(cohort_abr$avg_activity_freq_sy1_2)
breaks <- get_breaks(cohort_abr$avg_activity_freq_sy1_2, c(0, 0.25, 0.5, 0.75, 1))
# Assign labels dynamically
labels <- paste0("≥", round(head(breaks, -1), 2), " - <", round(tail(breaks, -1), 2))
# Apply the breaks using `cut()`
cohort_abr <- cohort_abr %>%
mutate(avg_activity_freq_sy1_2_quartiles = cut(avg_activity_freq_sy1_2,
breaks = breaks,
include.lowest = TRUE,
labels = labels))
cohort_abr$avg_frequency_5y_prior_endpoint <- as.numeric(cohort_abr$avg_frequency_5y_prior_endpoint)
breaks <- get_breaks(cohort_abr$avg_frequency_5y_prior_endpoint, c(0, 0.25, 0.5, 0.75, 1))
# Assign labels dynamically
labels <- paste0("≥", round(head(breaks, -1), 2), " - <", round(tail(breaks, -1), 2))
# Apply the breaks using `cut()`
cohort_abr <- cohort_abr %>%
mutate(avg_frequency_5y_prior_endpoint_quartiles = cut(avg_frequency_5y_prior_endpoint,
breaks = breaks,
include.lowest = TRUE,
labels = labels))
#duration
cohort_abr$avg_activity_duration_sy1_2 <- as.numeric(cohort_abr$avg_activity_duration_sy1_2)
breaks <- get_breaks(cohort_abr$avg_activity_duration_sy1_2, c(0, 0.25, 0.5, 0.75, 1))
# Assign labels dynamically
labels <- paste0("≥", round(head(breaks, -1), 2), " - <", round(tail(breaks, -1), 2))
# Apply the breaks using `cut()`
cohort_abr <- cohort_abr %>%
mutate(avg_activity_duration_sy1_2_quartiles = cut(avg_activity_duration_sy1_2,
breaks = breaks,
include.lowest = TRUE,
labels = labels))
#incense - early life and rest of life not enough breaks to do terciles
#whole of life
cohort_abr$use_incense_or_candles_sum_whole_life <- as.numeric(cohort_abr$use_incense_or_candles_sum_whole_life)
breaks <- get_breaks(cohort_abr$use_incense_or_candles_sum_whole_life, c(0, 0.25, 0.5, 0.75, 1))
# Assign labels dynamically
labels <- paste0("≥", round(head(breaks, -1), 2), " - <", round(tail(breaks, -1), 2))
# Apply the breaks using `cut()`
cohort_abr <- cohort_abr %>%
mutate(use_incense_or_candles_sum_whole_life_terciles = cut(use_incense_or_candles_sum_whole_life,
breaks = breaks,
include.lowest = TRUE,
labels = labels))
#weeds - all 0s - not quartiles/terciles
#insect - not enough variation for early life, rest of life, whole life
#aerosol - not enough var
#hepa - not enough var
###household
#whole
cohort_abr$in.the.house_YN_sum_whole_life <- as.numeric(cohort_abr$in.the.house_YN_sum_whole_life)
breaks <- get_breaks(cohort_abr$in.the.house_YN_sum_whole_life, c(0, 0.25, 0.5, 0.75, 1))
# Assign labels dynamically
labels <- paste0("≥", round(head(breaks, -1), 2), " - <", round(tail(breaks, -1), 2))
# Apply the breaks using `cut()`
cohort_abr <- cohort_abr %>%
mutate(in.the.house_YN_sum_whole_life_quartiles = cut(in.the.house_YN_sum_whole_life,
breaks = breaks,
include.lowest = TRUE,
labels = labels))
#rest
cohort_abr$in.the.house_YN_sum_rest_of_life <- as.numeric(cohort_abr$in.the.house_YN_sum_rest_of_life)
breaks <- get_breaks(cohort_abr$in.the.house_YN_sum_rest_of_life, c(0, 0.25, 0.5, 0.75, 1))
# Assign labels dynamically
labels <- paste0("≥", round(head(breaks, -1), 2), " - <", round(tail(breaks, -1), 2))
# Apply the breaks using `cut()`
cohort_abr <- cohort_abr %>%
mutate(in.the.house_YN_sum_rest_of_life_quartiles = cut(in.the.house_YN_sum_rest_of_life,
breaks = breaks,
include.lowest = TRUE,
labels = labels))
#early
cohort_abr$in.the.house_YN_sum_early_life <- as.numeric(cohort_abr$in.the.house_YN_sum_early_life)
breaks <- get_breaks(cohort_abr$in.the.house_YN_sum_early_life, c(0, 0.25, 0.5, 0.75, 1))
# Assign labels dynamically
labels <- paste0("≥", round(head(breaks, -1), 2), " - <", round(tail(breaks, -1), 2))
# Apply the breaks using `cut()`
cohort_abr <- cohort_abr %>%
mutate(in.the.house_YN_sum_early_life_terciles = cut(in.the.house_YN_sum_early_life,
breaks = breaks,
include.lowest = TRUE,
labels = labels))
#outside - not enough var
#garage - not enough var
#last tidying up of variables
cohort_abr <- cohort_abr %>%
dplyr::mutate(heating_fuel_primary_mode_5yrs_prior = case_when(
heating_fuel_primary_mode_5yrs_prior == "natural gas" ~ "natural_gas",
TRUE ~ heating_fuel_primary_mode_5yrs_prior
))
#recode 0 in neutered_reason to not_neutered and unknown as not_recorded
cohort_abr <- cohort_abr %>%
mutate(neutered_reason = recode(neutered_reason, "0" = "Entire"))
