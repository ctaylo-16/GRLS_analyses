dependent <- "had_HSA"
explanatory <- c("age_at_final_date_GB","sex_neuter","all_cancers_count_no_HSA","avg_weight_5y_prior_endpoint_kg_biological","NSAID_5y","avg_frequency_5y_prior_endpoint_splits_grouped")
final_model_table <-cohort_abr_sig_5y %>%
finalfit(dependent, explanatory, metrics = TRUE,column=TRUE) %>%
kable(format = "html", digits = 2, escape = FALSE) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover"))
final_model_table
model_weight_kg <-glm(had_HSA ~ age_at_final_date_GB + all_cancers_YN_no_HSA + avg_frequency_5y_prior_endpoint_splits_grouped+ avg_weight_5y_prior_endpoint_kg_biological + NSAID_5y  + sex_neuter , data=cohort_abr_sig_5y,family=binomial)
summary(model_weight_kg)
logistic.display(model_weight_kg)
#recode into tidier variables
#seperate df for recoding to avoid overwriting orignal df
df <-cohort_abr_sig_5y
#relabel from 0/1 Q1-Q4 etc
#parasites
#mct
df <- df %>%
mutate(
all_cancers_count_no_HSA = recode(as.character(all_cancers_count_no_HSA),
"0" = "No other cancer reported",
"1" = "1 other cancer reported",
"2" = "2 other cancers reported")
)
df <- df %>%
mutate(all_cancers_count_no_HSA = factor(all_cancers_count_no_HSA,levels=c(
"No other cancer reported","1 other cancer reported","2 other cancers reported"
)))
#GI comorb
df <- df %>%
mutate(
gastrointestinal = recode(as.character(gastrointestinal),
"0" = "GI comorb not present",
"1" = "GI comorb present")
)
df <- df %>%
mutate(gastrointestinal = factor(gastrointestinal,levels=c(
"GI comorb not present","GI comorb present"
)))
#NSAID ever
df <- df %>%
mutate(
NSAID_ever = recode(as.character(NSAID_ever),
"0" = "NSAID not administered",
"1" = "NSAID administered",
"no_medication_records_for_this_time_period" = "No medications records for lifetime")
)
cohort_abr_sig_5y$NSAID_5y
#recode into tidier variables
#seperate df for recoding to avoid overwriting orignal df
df <-cohort_abr_sig_5y
#relabel from 0/1 Q1-Q4 etc
#parasites
#mct
df <- df %>%
mutate(
all_cancers_count_no_HSA = recode(as.character(all_cancers_count_no_HSA),
"0" = "No other cancer reported",
"1" = "1 other cancer reported",
"2" = "2 other cancers reported")
)
df <- df %>%
mutate(all_cancers_count_no_HSA = factor(all_cancers_count_no_HSA,levels=c(
"No other cancer reported","1 other cancer reported","2 other cancers reported"
)))
#GI comorb
df <- df %>%
mutate(
gastrointestinal = recode(as.character(gastrointestinal),
"0" = "GI comorb not present",
"1" = "GI comorb present")
)
df <- df %>%
mutate(gastrointestinal = factor(gastrointestinal,levels=c(
"GI comorb not present","GI comorb present"
)))
#NSAID ever
df <- df %>%
mutate(
NSAID_5y = recode(as.character(NSAID_5y),
"0" = "NSAID not administered",
"1" = "NSAID administered",
"no_medication_records_for_this_time_period" = "No medications records for lifetime")
)
df <- df %>%
mutate(NSAID_5y = factor(NSAID_5y,levels=c(
"NSAID not administered","NSAID administered","No medications records for lifetime"
)))
#frequency activity quartile
df <- df %>%
mutate(
avg_frequency_5y_prior_endpoint_splits_grouped = recode(as.character(avg_frequency_5y_prior_endpoint_splits_grouped),
"daily_or_more" = "Daily or more",
"rarely" = "Rarely",
"weekly" = "Weekly",
"not_recorded" = "Activity freq. not recorded"
),
avg_frequency_5y_prior_endpoint_splits_grouped = factor(
avg_frequency_5y_prior_endpoint_splits_grouped,
levels = c("Daily or more",
"Weekly",
"Rarely",
"Activity freq. not recorded"
)
)
)
#remove univar
final_df <-df%>%
finalfit(dependent, explanatory)
View(final_df)
#remove univar
final_df <-df%>%
finalfit(dependent, explanatory)
#final_df <- final_df %>%
# rename('variable'=`Dependent: survival_time_group`)%>%
#dplyr::select(-c('OR (univariable)')) %>%
#dplyr::select(-c('0'))%>%
# dplyr::select(-c('1'))
final_df <- final_df %>%
rename('variable'=`Dependent: had_HSA`)%>%
dplyr::select(-c('OR (univariable)'))
#replace all - with 1(1-1)
final_df$`OR (multivariable)`[#replace all - with 1(1-1)
final_df $`OR (multivariable)` == "-"] <- "1(1-1, p<0.001)"
#extracting values with regex
final_df$estimate <- gsub("([0-9.]+)\\s*\\([0-9.-]+-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\1", final_df$`OR (multivariable)`)
final_df$conf.low <- gsub("([0-9.]+)\\s*\\(([0-9.-]+)-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\2", final_df$`OR (multivariable)`)
final_df$conf.high <- gsub("([0-9.]+)\\s*\\([0-9.-]+-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\2",  final_df$`OR (multivariable)`)
final_df$p.value <- gsub(".*p[=<]*([0-9.]+).*", "\\1", final_df$`OR (multivariable)`)
colnames(final_df)[2] <- "category"
final_df <- final_df %>%
rename(OR_CI = 'OR (multivariable)')
final_df <- final_df %>%
rename(Cases = '1')
final_df <- final_df %>%
rename(Controls = '0')
#For index for plotting
final_df$AutoNumber <- seq_along(final_df[[1]])
#rename 1(1-1) to reference
final_df$OR_CI[#replace all - with 1(1-1)
final_df$OR_CI == "1(1-1, p<0.001)"] <- "Reference"
View(final_df)
explanatory <- c("age_at_final_date_GB","sex_neuter","avg_weight_5y_prior_endpoint_kg_biological","all_cancers_count_no_HSA","NSAID_5y","avg_frequency_5y_prior_endpoint_splits_grouped")
#remove univar
final_df <-df%>%
finalfit(dependent, explanatory)
#final_df <- final_df %>%
# rename('variable'=`Dependent: survival_time_group`)%>%
#dplyr::select(-c('OR (univariable)')) %>%
#dplyr::select(-c('0'))%>%
# dplyr::select(-c('1'))
final_df <- final_df %>%
rename('variable'=`Dependent: had_HSA`)%>%
dplyr::select(-c('OR (univariable)'))
#replace all - with 1(1-1)
final_df$`OR (multivariable)`[#replace all - with 1(1-1)
final_df $`OR (multivariable)` == "-"] <- "1(1-1, p<0.001)"
#extracting values with regex
final_df$estimate <- gsub("([0-9.]+)\\s*\\([0-9.-]+-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\1", final_df$`OR (multivariable)`)
final_df$conf.low <- gsub("([0-9.]+)\\s*\\(([0-9.-]+)-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\2", final_df$`OR (multivariable)`)
final_df$conf.high <- gsub("([0-9.]+)\\s*\\([0-9.-]+-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\2",  final_df$`OR (multivariable)`)
final_df$p.value <- gsub(".*p[=<]*([0-9.]+).*", "\\1", final_df$`OR (multivariable)`)
colnames(final_df)[2] <- "category"
final_df <- final_df %>%
rename(OR_CI = 'OR (multivariable)')
final_df <- final_df %>%
rename(Cases = '1')
final_df <- final_df %>%
rename(Controls = '0')
#For index for plotting
final_df$AutoNumber <- seq_along(final_df[[1]])
#rename 1(1-1) to reference
final_df$OR_CI[#replace all - with 1(1-1)
final_df$OR_CI == "1(1-1, p<0.001)"] <- "Reference"
View(final_df)
#renaming variables for figure
final_df[15, 2] <- "Weight not recorded"
final_df[14,2]<-">35kg"
final_df[1, 1] <- "Age at final date (Barry)"
final_df[7, 1] <- "Sex-neuter status"
final_df[16,1] <- "Other cancer/s recorded count"
final_df[12, 1] <- "Avg. adult weight 5y prior to endpoint (quartiles)"
final_df[19, 1] <- "NSAID used - 5y prior to endpoint"
final_df[22, 1] <- "Avg. activity freq. score– 5y prior to endpoint (grouped)"
#replace the inf values from the not recorded category in activty freq with numeric values
final_df[12,5] <-"0.00 (0-6030770.80, p=0.967)"
final_df[12,6] <-"6030770.80"
final_df[12,7]<-"0.967"
#need to set inf as a number to make CI bar in forest plot - trialling with 50
final_df[12,8] <- "50"
#remove univar
final_df <-df%>%
finalfit(dependent, explanatory)
#final_df <- final_df %>%
# rename('variable'=`Dependent: survival_time_group`)%>%
#dplyr::select(-c('OR (univariable)')) %>%
#dplyr::select(-c('0'))%>%
# dplyr::select(-c('1'))
final_df <- final_df %>%
rename('variable'=`Dependent: had_HSA`)%>%
dplyr::select(-c('OR (univariable)'))
#replace all - with 1(1-1)
final_df$`OR (multivariable)`[#replace all - with 1(1-1)
final_df $`OR (multivariable)` == "-"] <- "1(1-1, p<0.001)"
#extracting values with regex
final_df$estimate <- gsub("([0-9.]+)\\s*\\([0-9.-]+-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\1", final_df$`OR (multivariable)`)
final_df$conf.low <- gsub("([0-9.]+)\\s*\\(([0-9.-]+)-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\2", final_df$`OR (multivariable)`)
final_df$conf.high <- gsub("([0-9.]+)\\s*\\([0-9.-]+-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\2",  final_df$`OR (multivariable)`)
final_df$p.value <- gsub(".*p[=<]*([0-9.]+).*", "\\1", final_df$`OR (multivariable)`)
colnames(final_df)[2] <- "category"
final_df <- final_df %>%
rename(OR_CI = 'OR (multivariable)')
final_df <- final_df %>%
rename(Cases = '1')
final_df <- final_df %>%
rename(Controls = '0')
#For index for plotting
final_df$AutoNumber <- seq_along(final_df[[1]])
#rename 1(1-1) to reference
final_df$OR_CI[#replace all - with 1(1-1)
final_df$OR_CI == "1(1-1, p<0.001)"] <- "Reference"
#renaming variables for figure
final_df[15, 2] <- "Weight not recorded"
final_df[14,2]<-">35kg"
final_df[1, 1] <- "Age at final date (Barry)"
final_df[7, 1] <- "Sex-neuter status"
final_df[16,1] <- "Other cancer/s recorded count"
final_df[11, 1] <- "Avg. adult weight 5y prior to endpoint (quartiles)"
final_df[19, 1] <- "NSAID used - 5y prior to endpoint"
final_df[22, 1] <- "Avg. activity freq. score– 5y prior to endpoint (grouped)"
#replace the inf values from the not recorded category in activty freq with numeric values
final_df[12,5] <-"0.00 (0-6030770.80, p=0.967)"
final_df[12,6]<-"0"
final_df[12,7] <-"6030770.80"
final_df[12,9]<-"0.967"
#need to set inf as a number to make CI bar in forest plot - trialling with 50
final_df[12,8] <- "50"
View(final_df)
#remove univar
final_df <-df%>%
finalfit(dependent, explanatory)
#final_df <- final_df %>%
# rename('variable'=`Dependent: survival_time_group`)%>%
#dplyr::select(-c('OR (univariable)')) %>%
#dplyr::select(-c('0'))%>%
# dplyr::select(-c('1'))
final_df <- final_df %>%
rename('variable'=`Dependent: had_HSA`)%>%
dplyr::select(-c('OR (univariable)'))
#replace all - with 1(1-1)
final_df$`OR (multivariable)`[#replace all - with 1(1-1)
final_df $`OR (multivariable)` == "-"] <- "1(1-1, p<0.001)"
#extracting values with regex
final_df$estimate <- gsub("([0-9.]+)\\s*\\([0-9.-]+-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\1", final_df$`OR (multivariable)`)
final_df$conf.low <- gsub("([0-9.]+)\\s*\\(([0-9.-]+)-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\2", final_df$`OR (multivariable)`)
final_df$conf.high <- gsub("([0-9.]+)\\s*\\([0-9.-]+-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\2",  final_df$`OR (multivariable)`)
final_df$p.value <- gsub(".*p[=<]*([0-9.]+).*", "\\1", final_df$`OR (multivariable)`)
colnames(final_df)[2] <- "category"
final_df <- final_df %>%
rename(OR_CI = 'OR (multivariable)')
final_df <- final_df %>%
rename(Cases = '1')
final_df <- final_df %>%
rename(Controls = '0')
#For index for plotting
final_df$AutoNumber <- seq_along(final_df[[1]])
#rename 1(1-1) to reference
final_df$OR_CI[#replace all - with 1(1-1)
final_df$OR_CI == "1(1-1, p<0.001)"] <- "Reference"
#renaming variables for figure
final_df[15, 2] <- "Weight not recorded"
final_df[14,2]<-">35kg"
final_df[1, 1] <- "Age at final date (Barry)"
final_df[7, 1] <- "Sex-neuter status"
final_df[16,1] <- "Other cancer/s recorded count"
final_df[11, 1] <- "Avg. adult weight 5y prior to endpoint (quartiles)"
final_df[19, 1] <- "NSAID used - 5y prior to endpoint"
final_df[22, 1] <- "Avg. activity freq. score– 5y prior to endpoint (grouped)"
#replace the inf values from the not recorded category in activty freq with numeric values
final_df[12,5] <-"0.00 (0-6030770.80, p=0.967)"
final_df[12,6]<-"0"
final_df[12,7] <-"0"
final_df[12,9]<-"0.967"
#need to set inf as a number to make CI bar in forest plot - trialling with 50
final_df[12,8] <- "50"
final_df$category
#remove univar
final_df <-df%>%
finalfit(dependent, explanatory)
#final_df <- final_df %>%
# rename('variable'=`Dependent: survival_time_group`)%>%
#dplyr::select(-c('OR (univariable)')) %>%
#dplyr::select(-c('0'))%>%
# dplyr::select(-c('1'))
final_df <- final_df %>%
rename('variable'=`Dependent: had_HSA`)%>%
dplyr::select(-c('OR (univariable)'))
#replace all - with 1(1-1)
final_df$`OR (multivariable)`[#replace all - with 1(1-1)
final_df $`OR (multivariable)` == "-"] <- "1(1-1, p<0.001)"
#extracting values with regex
final_df$estimate <- gsub("([0-9.]+)\\s*\\([0-9.-]+-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\1", final_df$`OR (multivariable)`)
final_df$conf.low <- gsub("([0-9.]+)\\s*\\(([0-9.-]+)-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\2", final_df$`OR (multivariable)`)
final_df$conf.high <- gsub("([0-9.]+)\\s*\\([0-9.-]+-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\2",  final_df$`OR (multivariable)`)
final_df$p.value <- gsub(".*p[=<]*([0-9.]+).*", "\\1", final_df$`OR (multivariable)`)
colnames(final_df)[2] <- "category"
final_df <- final_df %>%
rename(OR_CI = 'OR (multivariable)')
final_df <- final_df %>%
rename(Cases = '1')
final_df <- final_df %>%
rename(Controls = '0')
#For index for plotting
final_df$AutoNumber <- seq_along(final_df[[1]])
#rename 1(1-1) to reference
final_df$OR_CI[#replace all - with 1(1-1)
final_df$OR_CI == "1(1-1, p<0.001)"] <- "Reference"
#renaming variables for figure
final_df[15, 2] <- "Weight not recorded"
final_df[14,2]<-">35kg"
final_df[1, 1] <- "Age at final date (Barry)"
final_df[7, 1] <- "Sex-neuter status"
final_df[16,1] <- "Other cancer/s recorded count"
final_df[11, 1] <- "Avg. adult weight 5y prior to endpoint (quartiles)"
final_df[19, 1] <- "NSAID used - 5y prior to endpoint"
final_df[22, 1] <- "Avg. activity freq. score– 5y prior to endpoint (grouped)"
#replace the inf values from the not recorded category in activty freq with numeric values
final_df[12,5] <-"0.00 (0-6030770.80, p=0.967)"
final_df[12,6]<-"0"
final_df[12,7] <-"0"
final_df[12,9]<-"0.967"
#need to set inf as a number to make CI bar in forest plot - trialling with 50
final_df[12,8] <- "50"
final_df$category <- factor(final_df$category,
levels = c(">7-<9y","<5y",">5-<7y",">9-<11y",">11-<13y",">13y","F Entire","F Neutered","M Entire", "M Neutered",">15-<=25kg","<15kg",">25-<=35kg",">35kg","Weight not recorded","No other cancer reported","1 other cancer reported", "2 other cancers reported", "NSAID not administered", "NSAID administered", "No medications records for time period","Daily or more",
"Weekly","Rarely","Activity freq. not recorded"))
final_df$AutoNumber <- factor(final_df$AutoNumber,
levels = c("1","2","3","4","5","6","7","8","9","10","11","12",
"13","14","15","16","17","18","19","20","21","22","23","24","25"))
final_df$conf.high <- as.numeric(final_df$conf.high)
final_df$conf.low <- as.numeric(final_df$conf.low)
final_df$estimate <- as.numeric(final_df$estimate)
dependent <- "had_HSA"
explanatory <- c("age_at_final_date_GB","sex_neuter","avg_weight_5y_prior_endpoint_kg_biological","all_cancers_count_no_HSA","NSAID_5y","avg_frequency_5y_prior_endpoint_splits_grouped")
final_model_table <-cohort_abr_sig_5y %>%
finalfit(dependent, explanatory, metrics = TRUE,column=TRUE) %>%
kable(format = "html", digits = 2, escape = FALSE) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover"))
final_model_table
final_model_table2<- cohort_abr_sig_5y %>%
finalfit(dependent, explanatory, metrics = FALSE,column = TRUE)
final_model_table2_df <- as.data.frame(final_model_table2)
results_flextable <-flextable(final_model_table2_df)
#recode into tidier variables
#seperate df for recoding to avoid overwriting orignal df
df <-cohort_abr_sig_5y
#relabel from 0/1 Q1-Q4 etc
#parasites
#mct
df <- df %>%
mutate(
all_cancers_count_no_HSA = recode(as.character(all_cancers_count_no_HSA),
"0" = "No other cancer reported",
"1" = "1 other cancer reported",
"2" = "2 other cancers reported")
)
df <- df %>%
mutate(all_cancers_count_no_HSA = factor(all_cancers_count_no_HSA,levels=c(
"No other cancer reported","1 other cancer reported","2 other cancers reported"
)))
#GI comorb
df <- df %>%
mutate(
gastrointestinal = recode(as.character(gastrointestinal),
"0" = "GI comorb not present",
"1" = "GI comorb present")
)
df <- df %>%
mutate(gastrointestinal = factor(gastrointestinal,levels=c(
"GI comorb not present","GI comorb present"
)))
#NSAID ever
df <- df %>%
mutate(
NSAID_5y = recode(as.character(NSAID_5y),
"0" = "NSAID not administered",
"1" = "NSAID administered",
"no_medication_records_for_this_time_period" = "No medications records for time period")
)
df <- df %>%
mutate(NSAID_5y = factor(NSAID_5y,levels=c(
"NSAID not administered","NSAID administered","No medications records for time period"
)))
#frequency activity quartile
df <- df %>%
mutate(
avg_frequency_5y_prior_endpoint_splits_grouped = recode(as.character(avg_frequency_5y_prior_endpoint_splits_grouped),
"daily_or_more" = "Daily or more",
"rarely" = "Rarely",
"weekly" = "Weekly",
"not_recorded" = "Activity freq. not recorded"
),
avg_frequency_5y_prior_endpoint_splits_grouped = factor(
avg_frequency_5y_prior_endpoint_splits_grouped,
levels = c("Daily or more",
"Weekly",
"Rarely",
"Activity freq. not recorded"
)
)
)
#remove univar
final_df <-df%>%
finalfit(dependent, explanatory)
#final_df <- final_df %>%
# rename('variable'=`Dependent: survival_time_group`)%>%
#dplyr::select(-c('OR (univariable)')) %>%
#dplyr::select(-c('0'))%>%
# dplyr::select(-c('1'))
final_df <- final_df %>%
rename('variable'=`Dependent: had_HSA`)%>%
dplyr::select(-c('OR (univariable)'))
#replace all - with 1(1-1)
final_df$`OR (multivariable)`[#replace all - with 1(1-1)
final_df $`OR (multivariable)` == "-"] <- "1(1-1, p<0.001)"
#extracting values with regex
final_df$estimate <- gsub("([0-9.]+)\\s*\\([0-9.-]+-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\1", final_df$`OR (multivariable)`)
final_df$conf.low <- gsub("([0-9.]+)\\s*\\(([0-9.-]+)-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\2", final_df$`OR (multivariable)`)
final_df$conf.high <- gsub("([0-9.]+)\\s*\\([0-9.-]+-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\2",  final_df$`OR (multivariable)`)
final_df$p.value <- gsub(".*p[=<]*([0-9.]+).*", "\\1", final_df$`OR (multivariable)`)
colnames(final_df)[2] <- "category"
final_df <- final_df %>%
rename(OR_CI = 'OR (multivariable)')
final_df <- final_df %>%
rename(Cases = '1')
final_df <- final_df %>%
rename(Controls = '0')
#For index for plotting
final_df$AutoNumber <- seq_along(final_df[[1]])
#rename 1(1-1) to reference
final_df$OR_CI[#replace all - with 1(1-1)
final_df$OR_CI == "1(1-1, p<0.001)"] <- "Reference"
#renaming variables for figure
final_df[15, 2] <- "Weight not recorded"
final_df[14,2]<-">35kg"
final_df[1, 1] <- "Age at final date (Barry)"
final_df[7, 1] <- "Sex-neuter status"
final_df[16,1] <- "Other cancer/s recorded count"
final_df[11, 1] <- "Avg. adult weight 5y prior to endpoint (quartiles)"
final_df[19, 1] <- "NSAID used - 5y prior to endpoint"
final_df[22, 1] <- "Avg. activity freq. score– 5y prior to endpoint (grouped)"
#replace the inf values from the not recorded category in activty freq with numeric values
final_df[12,5] <-"0.00 (0-6030770.80, p=0.967)"
final_df[12,6]<-"0"
final_df[12,7] <-"0"
final_df[12,9]<-"0.967"
#need to set inf as a number to make CI bar in forest plot - trialling with 50
final_df[12,8] <- "50"
final_df$category <- factor(final_df$category,
levels = c(">7-<9y","<5y",">5-<7y",">9-<11y",">11-<13y",">13y","F Entire","F Neutered","M Entire", "M Neutered",">15-<=25kg","<15kg",">25-<=35kg",">35kg","Weight not recorded","No other cancer reported","1 other cancer reported", "2 other cancers reported", "NSAID not administered", "NSAID administered", "No medications records for time period","Daily or more",
"Weekly","Rarely","Activity freq. not recorded"))
final_df$AutoNumber <- factor(final_df$AutoNumber,
levels = c("1","2","3","4","5","6","7","8","9","10","11","12",
"13","14","15","16","17","18","19","20","21","22","23","24","25"))
final_df$conf.high <- as.numeric(final_df$conf.high)
final_df$conf.low <- as.numeric(final_df$conf.low)
final_df$estimate <- as.numeric(final_df$estimate)
library(ggplot2)
library(patchwork)
library(forcats)
# Mid plot with adjusted dimensions
p_mid <-
final_df |>
ggplot(aes(y = fct_rev(AutoNumber))) +
theme_classic() +
geom_point(aes(x = estimate), shape = 15, size = 5) +
geom_linerange(aes(xmin = conf.low, xmax = conf.high)) +
labs(x = "Odds Ratio") +
coord_cartesian(ylim = c(1, 25), xlim = c(0, 12)) +
geom_vline(xintercept = 1, linetype = "dashed") +
theme(
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank()
)
# Left plot with more spaced columns and adjusted xlim
p_left <-
final_df |>
ggplot(aes(y = fct_rev(AutoNumber))) +
geom_text(aes(x = 0, label = variable), hjust = 0, size = 4, fontface = "bold") +
geom_text(aes(x = 25, label = category), hjust = 0, fontface = "bold", size = 3.5) +
geom_text(aes(x = 45, label = Controls), hjust = 0, fontface = "bold", size = 3.5)+
geom_text(aes(x = 50, label = Cases), hjust = 0, fontface = "bold", size = 3.5)+
geom_text(aes(x = 60, label = OR_CI), hjust = 0,
fontface = ifelse(final_df$OR_CI == "Odds Ratio (95% CI)", "bold", "plain"),
size = 3.5) +
theme_void() +
coord_cartesian(xlim = c(0, 80))  # Allows room for three text columns
layout2 <- c(
patchwork::area(t = 0, l = 0, b = 30, r = 9),  # Make p_left wider# top, left, bottom, right
patchwork::area(t = 1, l = 9, b = 30, r = 15)    # p_mid occupies a smaller part
)
# Combine plots with adjusted layout
forest_log <- p_left + p_mid + plot_layout(design = layout2)
forest_log
ggsave("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/logreg_forestplot_casecontrol_numbers5y.pdf", plot = forest_log, width = 25, height = 15, dpi = 300)
ggsave("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/logreg_forestplot_casecontrol_numbers5y.pdf", plot = forest_log, width = 25, height = 15, dpi = 300)
ggsave("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/logreg_forestplot_casecontrol_numbers5y.svg", plot = forest_log, width = 25, height = 15, dpi = 300)
ggsave("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/logreg_forestplot_casecontrol_numbers5y.tif", plot = forest_log, width = 25, height = 15, dpi = 300)
ggsave("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/logreg_forestplot5y.pdf", plot = forest_log, width = 25, height = 15, dpi = 300)
ggsave("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/logreg_forestplot5y.svg", plot = forest_log, width = 25, height = 15, dpi = 300)
ggsave("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/logreg_forestplot5y.tif", plot = forest_log, width = 25, height = 15, dpi = 300)
