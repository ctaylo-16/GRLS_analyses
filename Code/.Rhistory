endpoints_neo <- endpoints %>%
filter(grepl('tumor|oma|leuk|neopla',tracked_condition),ignore.case=TRUE)
ggplot(endpoints_neo, aes(x = age_at_diagnosis)) +
geom_histogram(binwidth = 2, fill = "steelblue", color = "black", alpha = 0.7) +
labs(
title = "Distribution of Age at Endpoint Diagnosis (Neoplasia Endpoints)",
x = "Age at Diagnosis (years)",
y = "Frequency"
) +
theme_minimal()
endpoints_neo %>% group_by(tracked_condition) %>%
summarise(Frequency = n()
) %>% arrange(desc(Frequency))
hsa <- endpoints_neo %>% filter(grepl('hemangiosarcoma',tracked_condition),ignore.case=TRUE)
mct <- endpoints_neo %>% filter(grepl('mast',tracked_condition),ignore.case=TRUE)
lymphoma <- endpoints_neo %>% filter(grepl('lymphoma',tracked_condition),ignore.case=TRUE)
hist_sarc <- endpoints_neo %>% filter(grepl('histiocytic',tracked_condition),ignore.case=TRUE)
soft_sarc <- endpoints_neo %>% filter(grepl('soft',tracked_condition),ignore.case=TRUE)
melanoma <- <- endpoints_neo %>% filter(grepl('malignant melanoma',tracked_condition),ignore.case=TRUE)
melanoma <- endpoints_neo %>% filter(grepl('malignant melanoma',tracked_condition),ignore.case=TRUE)
View(melanoma)
hsa <- endpoints_neo %>%
filter(grepl('hemangiosarcoma',tracked_condition),ignore.case=TRUE)
ggplot(hsa, aes(x = age_at_diagnosis)) +
geom_histogram(binwidth = 2, fill = "steelblue", color = "black", alpha = 0.7) +
labs(
title = "Distribution of Age at HSA Diagnosis",
x = "Age at Diagnosis (years)",
y = "Frequency"
) +
theme_minimal()
mct <- endpoints_neo %>%
filter(grepl('mast',tracked_condition),ignore.case=TRUE)
ggplot(mct, aes(x = age_at_diagnosis)) +
geom_histogram(binwidth = 2, fill = "steelblue", color = "black", alpha = 0.7) +
labs(
title = "Distribution of Age at MCT diagnosis",
x = "Age at Diagnosis (years)",
y = "Frequency"
) +
theme_minimal()
lymphoma <- endpoints_neo %>%
filter(grepl('lymphoma',tracked_condition),ignore.case=TRUE)
ggplot(lymphoma, aes(x = age_at_diagnosis)) +
geom_histogram(binwidth = 2, fill = "steelblue", color = "black", alpha = 0.7) +
labs(
title = "Distribution of Age at Lymphoma Diagnosis",
x = "Age at Diagnosis (years)",
y = "Frequency"
) +
theme_minimal()
hist_sarc <- endpoints_neo %>%
filter(grepl('histiocytic',tracked_condition),ignore.case=TRUE)
ggplot(hist_sarc, aes(x = age_at_diagnosis)) +
geom_histogram(binwidth = 2, fill = "steelblue", color = "black", alpha = 0.7) +
labs(
title = "Distribution of Age at Histocytic Sarcoma Diagnosis",
x = "Age at Diagnosis (years)",
y = "Frequency"
) +
theme_minimal()
soft_sarc <- endpoints_neo %>%
filter(grepl('soft',tracked_condition),ignore.case=TRUE)
ggplot(soft_sarc, aes(x = age_at_diagnosis)) +
geom_histogram(binwidth = 2, fill = "steelblue", color = "black", alpha = 0.7) +
labs(
title = "Distribution of Age at Soft Tissue Sarcoma",
x = "Age at Diagnosis (years)",
y = "Frequency"
) +
theme_minimal()
melanoma <- endpoints_neo %>%
filter(grepl('malignant melanoma',tracked_condition),ignore.case=TRUE)
ggplot(melanoma, aes(x = age_at_diagnosis)) +
geom_histogram(binwidth = 2, fill = "steelblue", color = "black", alpha = 0.7) +
labs(
title = "Distribution of Age at Malignant Melanoma Diagnosis",
x = "Age at Diagnosis (years)",
y = "Frequency"
) +
theme_minimal()
all_cancer_points<- all_cancer_points %>%
mutate(across(where(is.character), tolower))
all_cancer_points <- all_cancer_points %>%
left_join(dog_profile,by="subject_id")
View(all_cancer_points)
View(all_cancer_points)
cancer_only_points <- all_cancer_points %>%
filter(if_any(7:40, ~ . == 1))
View(cancer_only_points)
View(cancer_only_points)
for (i in 7:40) {
col_name <- colnames(cancer_only_points)[i]
# Plotting histogram
p <- ggplot(cancer_only_points, aes_string(x = col_name)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = col_name, x = col_name, y = "Frequency") +
theme_minimal()
# Print the plot (or save it if needed)
print(p)
}
# Loop through each of the columns in the range 20 to 45
for (i in 7:40) {
col_name <- colnames(cancer_only_points)[i]
# Plotting histogram
p <- ggplot(cancer_only_points, aes_string(x = record_year)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = col_name, x = col_name, y = "Frequency") +
theme_minimal()
# Print the plot (or save it if needed)
print(p)
}
# Loop through each of the columns in the range 20 to 45
for (i in 7:40) {
col_name <- colnames(cancer_only_points)[i]
# Plotting histogram
p <- ggplot(cancer_only_points, aes_string(x = year_in_study)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = col_name, x = col_name, y = "Frequency") +
theme_minimal()
# Print the plot (or save it if needed)
print(p)
}
for (i in 7:40) {
col_name <- colnames(df)[i]
# Create the histogram
p <- ggplot(cancer_only_points, aes_string(x = "year_in_study", y = col_name)) +
geom_histogram(stat = "identity", fill = "skyblue", color = "black") +
labs(title = col_name, x = "Record Year", y = "Frequency") +
theme_minimal()
# Print the plot (or save it if needed)
print(p)
}
class(cancer_only_points$year_in_study)
# Loop through each of the columns in the range 20 to 45
for (i in 7:40) {
col_name <- colnames(df)[i]
# Create the histogram
p <- ggplot(cancer_only_points, aes_string(x = "year_in_study", y = col_name)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
labs(title = col_name, x = "Record Year", y = "Frequency") +
theme_minimal()
# Print the plot (or save it if needed)
print(p)
}
# Loop through each of the columns in the range 20 to 45
for (i in 7:40) {
col_name <- colnames(df)[i]
# Create the histogram
p <- ggplot(cancer_only_points, aes_string(x = "year_in_study", y = "count")) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
labs(title = col_name, x = "Record Year", y = "Frequency") +
theme_minimal()
# Print the plot (or save it if needed)
print(p)
}
for (i in 7:40) {
col_name <- colnames(df)[i]
# Create the histogram
p <- ggplot(cancer_only_points, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
labs(title = col_name, x = "Record Year", y = "Frequency") +
theme_minimal()
# Print the plot (or save it if needed)
print(p)
}
for (i in 7:40) {
col_name <- colnames(df)[i]
# Create the histogram
p <- ggplot(cancer_only_points, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = col_name, x = "Record Year", y = "Frequency") +
theme_minimal()
# Print the plot (or save it if needed)
print(p)
}
# Loop through each of the columns in the range 20 to 45
for (i in 7:40) {
col_name <- colnames(df)[i]
# Create the histogram
p <- ggplot(cancer_only_points, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = col_name, x = "Record Year", y = "Frequency") +
theme_minimal()
# Print the plot (or save it if needed)
print(p)
ggsave(filename = paste0("histogram_", col_name, ".png"), plot = p, width = 10, height = 6)
}
getwd()
for (i in 20:45) {
col_name <- colnames(df)[i]
# Create the histogram using `geom_bar()`
p <- ggplot(cancer_only_points, aes_string(x = "year_in_study")) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = col_name, x = "Record Year", y = "Frequency") +
theme_minimal()
# Print the plot
print(p)
}
for (i in 20:45) {
col_name <- colnames(df)[i]
# Create the histogram using `geom_bar()`
p <- ggplot(cancer_only_points, aes_string(x = "year_in_study")) +
geom_bar(stat="count",fill = "skyblue", color = "black") +
labs(title = col_name, x = "Record Year", y = "Frequency") +
theme_minimal()
# Print the plot
print(p)
}
count_ones_df <- cancer_only_points %>%
select(7:40) %>%
mutate(across(everything(), ~ sum(. == 1))) %>%
rename_with(~ paste0("count_", .), everything())
View(count_ones_df)
View(count_ones_df)
count_ones_df <- cancer_only_points %>%
select(7:40) %>%
mutate(across(everything(), ~ sum(. == 1)))
View(count_ones_df)
count_ones_df <- cancer_only_points %>%
select(7:40) %>%
mutate(across(everything(), ~ sum(. == 1))) %>%
filter(if_any(1:34,~.==1))
count_ones_df <- cancer_only_points %>%
select(7:40) %>%
mutate(across(everything(), ~ sum(. == 1)))
count_ones_df %>%
filter(if_any(1:34),~.==1)
count_ones_df_2 <- count_ones_df select_if(~ any(. != 0))
#remove columns where there are no cancers of that type recorded
count_ones_df_2 <- count_ones_df %>%
select_if(~ any(. != 0))
count_ones_df_3 <- count_ones_df %>%
select_if(~ any(. != 1))
#list of col names with only 0s
count_ones_df_3 <- count_ones_df %>%
select_if(~ any(. == 0))
cancer_only_points2 <- cancer_only_points %>%
select(-all_of(colnames(count_ones_df_3)))
View(cancer_only_points2)
View(cancer_only_points)
cancer_only_points <- cancer_only_points %>%
distinct()
cancer_only_points <- cancer_only_points %>%
distinct()
count_ones_df <- cancer_only_points %>%
select(7:40) %>%
mutate(across(everything(), ~ sum(. == 1)))
#remove columns where there are no cancers of that type recorded
count_ones_df_2 <- count_ones_df %>%
select_if(~ any(. != 0))
#list of col names with only 0s
count_ones_df_3 <- count_ones_df %>%
select_if(~ any(. == 0))
#filter column names now in main df
cancer_only_points2 <- cancer_only_points %>%
select(-all_of(colnames(count_ones_df_3)))
View(cancer_only_points2)
View(count_ones_df)
mct_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,mast_cell_tumor))
View(mct)
View(mct_all)
mct_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,mast_cell_tumor))%>%
filter(mast_cell_tumor==1)
View(mct_all)
mct_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,mast_cell_tumor))%>%
filter(mast_cell_tumor==1) %>%
distinct()
p <- ggplot(mct_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = mast_cell_tumor, x = "Record Year", y = "Frequency") +
theme_minimal()
mct_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,mast_cell_tumor))%>%
filter(mast_cell_tumor==1) %>%
distinct()
p <- ggplot(mct_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Mast cell tumour diagnosis record year", x = "Record Year", y = "Frequency") +
theme_minimal()
# Print the plot (or save it if needed)
print(p)
mct_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,mast_cell_tumor))%>%
filter(mast_cell_tumor==1) %>%
distinct()
p <- ggplot(mct_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Mast cell tumour diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(mct_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
hsa_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,hemangiosarcoma))%>%
filter(mast_cell_tumor==1) %>%
distinct()
hsa_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,hemangiosarcoma))%>%
filter(hemangiosarcoma==1) %>%
distinct()
p <- ggplot(hsa_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Haemangiosarcoma diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(mct_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
lymphoma_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,lymphoma))%>%
filter(lymphoma==1) %>%
distinct()
p <- ggplot(lymphoma_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Lymphoma diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(mct_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
st_sarc_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,soft_tissue_sarcoma))%>%
filter(soft_tissue_sarcoma==1) %>%
distinct()
p <- ggplot(soft_tissue_sarcoma, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Soft tissue sarcoma diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(mct_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
st_sarc_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,soft_tissue_sarcoma))%>%
filter(soft_tissue_sarcoma==1) %>%
distinct()
p <- ggplot(st_sarc_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Soft tissue sarcoma diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(mct_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
melanoma_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,melanoma))%>%
filter(melanoma==1) %>%
distinct()
p <- ggplot(melanoma_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Melanoma diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(mct_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
melanoma_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,melanoma))%>%
filter(melanoma==1) %>%
distinct()
p <- ggplot(melanoma_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Melanoma diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(melanoma_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
hsa_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,hemangiosarcoma))%>%
filter(hemangiosarcoma==1) %>%
distinct()
p <- ggplot(hsa_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Haemangiosarcoma diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(hsa_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
lymphoma_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,lymphoma))%>%
filter(lymphoma==1) %>%
distinct()
p <- ggplot(lymphoma_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Lymphoma diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(lymphoma_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
st_sarc_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,soft_tissue_sarcoma))%>%
filter(soft_tissue_sarcoma==1) %>%
distinct()
p <- ggplot(st_sarc_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Soft tissue sarcoma diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(st_sarc_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
st_sarc_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,soft_tissue_sarcoma))%>%
filter(soft_tissue_sarcoma==1) %>%
distinct()
p <- ggplot(st_sarc_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Soft tissue sarcoma diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(mct_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
st_sarc_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,soft_tissue_sarcoma))%>%
filter(soft_tissue_sarcoma==1) %>%
distinct()
p <- ggplot(st_sarc_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Soft tissue sarcoma diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(st_sarc_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
eye_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,eye_tumor))%>%
filter(eye_tumor==1) %>%
distinct()
p <- ggplot(eye_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Eye tumour diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(eye_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
View(eye_all)
mct_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,mast_cell_tumor))%>%
filter(mast_cell_tumor==1) %>%
distinct(subject_id)
melanoma_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,melanoma))%>%
filter(melanoma==1) %>%
distinct(subject_id)
p <- ggplot(melanoma_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Melanoma diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(melanoma_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
mct_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,mast_cell_tumor))%>%
filter(mast_cell_tumor==1) %>%
distinct()
p <- ggplot(mct_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Mast cell tumour diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(mct_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
mct_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,mast_cell_tumor))%>%
filter(mast_cell_tumor==1) %>%
distinct()
p <- ggplot(mct_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Mast cell tumour diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(mct_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
p
mct_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,mast_cell_tumor))%>%
filter(mast_cell_tumor==1) %>%
distinct(subject_id,.keep_all = TRUE)
p <- ggplot(mct_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Mast cell tumour diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(mct_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
p
hsa_all <- cancer_only_points2 %>%
dplyr::select(c(subject_id,year_in_study,hemangiosarcoma))%>%
filter(hemangiosarcoma==1) %>%
distinct(subject_id,.keep_all = TRUE)
p <- ggplot(hsa_all, aes_string(x = "year_in_study", y = "..count..")) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Haemangiosarcoma diagnosis by study record year", x = "Record Year", y = "Frequency") +
theme_minimal() +
scale_x_continuous(breaks = unique(hsa_all$year_in_study),
labels = function(x) as.integer(x))  # This converts numbers to whole numbers
# Print the plot (or save it if needed)
print(p)
View(dog_profile_enrol)
View(dog_profile)
