var1 = pair[1],
var2 = pair[2],
interaction_term = interaction_term,
interaction_p = interaction_p,
lrt_p = lrt_p
)
}, error = function(e) {
# In case of error, return NA row with interaction name
data.frame(
var1 = pair[1],
var2 = pair[2],
interaction_term = interaction_term,
interaction_p = NA,
lrt_p = NA
)
})
}, simplify = FALSE)
# Combine results
interaction_results_df <- do.call(rbind, interaction_results)
# Show results with significant interactions (e.g. LRT p < 0.05)
interaction_results_df %>%
arrange(lrt_p) %>%
filter(!is.na(lrt_p) & lrt_p < 0.05)
library(broom)
# Define the variables in the model
vars <- c("age_at_final_date_GB",
"prior5y_activity_mode",
"all_cancers_YN_no_HSA",
"quartile_anti_parasites_5y_prior_endpoint",
"NSAID_ever",
"gastrointestinal",
"avg_weight_5y_prior_endpoint_kg_biological",
"sex",
"smoke_exposure_study_years_early_life")
# Fit the base model
model_f <- glm(had_HSA ~ ., data = cohort_abr_sig[, c("had_HSA", vars)], family = binomial)
# Loop through all pairwise combinations
interaction_results <- combn(vars, 2, FUN = function(pair) {
interaction_term <- paste(pair, collapse = ":")
# Try-catch to handle any errors
tryCatch({
# Build interaction formula
interaction_formula <- as.formula(
paste("had_HSA ~", paste(vars, collapse = " + "), "+", interaction_term)
)
# Fit model with interaction
model_interaction <- glm(interaction_formula, data = cohort_abr_sig, family = binomial)
# Extract interaction p-value (if term exists in model)
coef_summary <- summary(model_interaction)$coefficients
if (!interaction_term %in% rownames(coef_summary)) {
interaction_p <- NA
} else {
interaction_p <- coef_summary[interaction_term, "Pr(>|z|)"]
}
# LRT p-value
lrt_p <- anova(model_f, model_interaction, test = "LRT")$`Pr(>Chi)`[2]
# Return as data frame
data.frame(
var1 = pair[1],
var2 = pair[2],
interaction_term = interaction_term,
interaction_p = interaction_p,
lrt_p = lrt_p
)
}, error = function(e) {
# In case of error, return NA row with interaction name
data.frame(
var1 = pair[1],
var2 = pair[2],
interaction_term = interaction_term,
interaction_p = NA,
lrt_p = NA
)
})
}, simplify = FALSE)
# Combine results
interaction_results_df <- do.call(rbind, interaction_results)
# Show results with significant interactions (e.g. LRT p < 0.05)
interaction_results_df %>%
arrange(lrt_p) %>%
filter(!is.na(lrt_p) & lrt_p < 0.05)
model_f_int<- glm(had_HSA ~ age_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA +quartile_anti_parasites_5y_prior_endpoint  +NSAID_ever +  gastrointestinal + avg_weight_5y_prior_endpoint_kg_biological + sex + smoke_exposure_study_years_early_life + NSAID_ever*smoke_exposure_study_years_early_life + age_at_final_date_GB*all_cancers_YN_no_HSA + all_cancers_YN_no_HSA*avg_weight_5y_prior_endpoint_kg_biological + all_cancers_YN_no_HSA*quartile_anti_parasites_5y_prior_endpoint + age_at_final_date_GB*prior5y_activity_mode , data = cohort_abr_sig, family = binomial)
summary(model_f_int)
logistic.display(model_f_int)
model_f_int<- glm(had_HSA ~ age_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA +quartile_anti_parasites_5y_prior_endpoint  +NSAID_ever +  gastrointestinal + avg_weight_5y_prior_endpoint_kg_biological + sex + smoke_exposure_study_years_early_life+ NSAID_ever*smoke_exposure_study_years_early_life  + all_cancers_YN_no_HSA*avg_weight_5y_prior_endpoint_kg_biological + all_cancers_YN_no_HSA*quartile_anti_parasites_5y_prior_endpoint , data = cohort_abr_sig, family = binomial)
summary(model_f_int)
logistic.display(model_f_int)
model_f_int2<- glm(had_HSA ~ aage_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA +quartile_anti_parasites_5y_prior_endpoint  +NSAID_ever +  gastrointestinal + avg_weight_5y_prior_endpoint_kg_biological + sex + smoke_exposure_study_years_early_life+ NSAID_ever*smoke_exposure_study_years_early_life   , data = cohort_abr_sig, family = binomial)
model_f_int2<- glm(had_HSA ~ age_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA +quartile_anti_parasites_5y_prior_endpoint  +NSAID_ever +  gastrointestinal + avg_weight_5y_prior_endpoint_kg_biological + sex + smoke_exposure_study_years_early_life+ NSAID_ever*smoke_exposure_study_years_early_life   , data = cohort_abr_sig, family = binomial)
summary(model_f_int2)
logistic.display(model_f_int2)
no_para<- glm(had_HSA ~ age_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA  +NSAID_ever +  gastrointestinal + avg_weight_5y_prior_endpoint_kg_biological + sex + smoke_exposure_study_years_early_life+ NSAID_ever*smoke_exposure_study_years_early_life    , data = cohort_abr_sig, family = binomial)
summary(no_para)
no_freq<- glm(had_HSA ~ age_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA +quartile_anti_parasites_5y_prior_endpoint  +NSAID_ever +  gastrointestinal + avg_weight_5y_prior_endpoint_kg_biological + sex + smoke_exposure_study_years_early_life+ NSAID_ever*smoke_exposure_study_years_early_life   , data = cohort_abr_sig, family = binomial)
summary(no_freq)
lrtest(no_para,model_f)
lrtest(no_freq,model_f)
summary(no_freq)
model_f2<- glm(had_HSA ~ age_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA NSAID_5y_quantiles +  gastrointestinal + avg_weight_5y_prior_endpoint_kg_biological + sex + smoke_exposure_study_years_early_life+ NSAID_ever*smoke_exposure_study_years_early_life    , data = cohort_abr_sig, family = binomial)
model_f2<- glm(had_HSA ~ age_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA + NSAID_5y_quantiles +  gastrointestinal + avg_weight_5y_prior_endpoint_kg_biological + sex + smoke_exposure_study_years_early_life+ NSAID_ever*smoke_exposure_study_years_early_life    , data = cohort_abr_sig, family = binomial)
summary(model_f2)
logistic.display(model_f2)
model_f2<- glm(had_HSA ~ age_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA NSAID_5y_quantiles +  gastrointestinal + avg_weight_5y_prior_endpoint_kg_biological + sex + smoke_exposure_study_years_early_life+ NSAID_5y_quantiles*smoke_exposure_study_years_early_life    , data = cohort_abr_sig, family = binomial)
model_f2<- glm(had_HSA ~ age_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA+ NSAID_5y_quantiles +  gastrointestinal + avg_weight_5y_prior_endpoint_kg_biological + sex + smoke_exposure_study_years_early_life+ NSAID_5y_quantiles*smoke_exposure_study_years_early_life    , data = cohort_abr_sig, family = binomial)
summary(model_f2)
logistic.display(model_f2)
model_f3<- glm(had_HSA ~ age_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA+ NSAID_5y_quantiles +  gastrointestinal + avg_weight_5y_prior_endpoint_kg_biological + sex    , data = cohort_abr_sig, family = binomial)
summary(model_f3)
logistic.display(model_f3)
lrtest(model_f2,model_f3)
lrtest(model_f3,model_f2)
#original weight used
model_w1<- glm(had_HSA ~ age_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA+ NSAID_5y_quantiles +  gastrointestinal + avg_weight_5y_prior_endpoint_kg_biological + sex  , data = cohort_abr_sig, family = binomial)
summary(model_w1)
logistic.display(model_w1)
#median with all 5y records biological
model_w2<- glm(had_HSA ~ age_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA+ NSAID_5y_quantiles +  gastrointestinal  + sex  median_weight_5y_prior_endpoint_kg_outliers_removed_biological , data = cohort_abr_sig, family = binomial)
model_w2<- glm(had_HSA ~ age_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA+ NSAID_5y_quantiles +  gastrointestinal  + sex+  median_weight_5y_prior_endpoint_kg_outliers_removed_biological , data = cohort_abr_sig, family = binomial)
summary(model_w2)
logistic.display(model_w2)
model_w3<- glm(had_HSA ~ age_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA+ NSAID_5y_quantiles +  gastrointestinal + avg_weight_5y_prior_endpoint_kg_biological + sex + median_weight_5y_prior_endpoint_any_records_kg_outliers_removed_biological  , data = cohort_abr_sig, family = binomial)
summary(model_w3)
logistic.display(model_w3)
model_w4<- glm(had_HSA ~ age_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA+ NSAID_5y_quantiles +  gastrointestinal + avg_weight_5y_prior_endpoint_kg_biological + sex + median_weight_5y_prior_endpoint_kg_outliers_removed_quartiles   , data = cohort_abr_sig, family = binomial)
summary(model_w4)
logistic.display(model_w4)
model_w5<- glm(had_HSA ~ age_at_final_date_GB  + prior5y_activity_mode + all_cancers_YN_no_HSA+ NSAID_5y_quantiles +  gastrointestinal + avg_weight_5y_prior_endpoint_kg_biological + sex + median_weight_5y_prior_endpoint_any_records_kg_outliers_removed_quartiles , data = cohort_abr_sig, family = binomial)
summary(model_w5)
logistic.display(model_w5)
library(pscl)
# Calculate pseudo R^2
pseudo_r2 <- pR2(model_w2)
print(pseudo_r2)
library(pROC)
# Generate predicted probabilities
predicted_prob <- predict(model_w2, type = "response")
# Calculate the AUC
roc_curve <- roc(cohort_abr_sig$had_HSA, predicted_prob)
auc_value <- auc(roc_curve)
print(auc_value)
# Plot the ROC curve
plot(roc_curve, main = "ROC Curve", col = "blue", lwd = 2)
dependent <- "had_HSA"
explanatory <- c(
"age_at_final_date_GB",
"sex",
"median_weight_5y_prior_endpoint_any_records_kg_outliers_removed_biological",
"prior_5y_activity_mode",
"all_cancers_YN_no_HSA",
"NSAID_5y_quantiles",
"gastrointestinal",
)
dependent <- "had_HSA"
explanatory <- c(
"age_at_final_date_GB",
"sex",
"median_weight_5y_prior_endpoint_any_records_kg_outliers_removed_biological",
"prior_5y_activity_mode",
"all_cancers_YN_no_HSA",
"NSAID_5y_quantiles",
"gastrointestinal"
)
final_model_table <- cohort_abr_sig %>%
finalfit(dependent, explanatory, metrics = TRUE, column = TRUE) %>%
kable(format = "html", digits = 2, escape = FALSE) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover"))
dependent <- "had_HSA"
explanatory <- c(
"age_at_final_date_GB",
"sex",
"median_weight_5y_prior_endpoint_any_records_kg_outliers_removed_biological",
"prior5y_activity_mode",
"all_cancers_YN_no_HSA",
"NSAID_5y_quantiles",
"gastrointestinal"
)
final_model_table <- cohort_abr_sig %>%
finalfit(dependent, explanatory, metrics = TRUE, column = TRUE) %>%
kable(format = "html", digits = 2, escape = FALSE) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover"))
final_model_table
dependent <- "had_HSA"
explanatory <- c(    "age_at_final_date_GB",
"sex",
"median_weight_5y_prior_endpoint_any_records_kg_outliers_removed_biological",
"prior5y_activity_mode",
"all_cancers_YN_no_HSA",
"NSAID_5y_quantiles",
"gastrointestinal")
final_model_table <-cohort_abr %>%
finalfit(dependent, explanatory, metrics = TRUE,column=TRUE) %>%
kable(format = "html", digits = 2, escape = FALSE) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover"))
final_model_table
final_model_table2<- cohort_abr_sig %>%
finalfit(dependent, explanatory, metrics = FALSE,column = TRUE)
final_model_table2_df <- as.data.frame(final_model_table2)
results_flextable <-flextable(final_model_table2_df)
# Create a Word document
doc <- read_docx()
# Add the flextable to the Word document
doc <- doc %>%
body_add_flextable(results_flextable) %>%
body_add_par("Finalfit Regression Results", style = "heading 1")
print(results_flextable, target = "C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/250617_finalfit_logreg_table_all_variables.docx")
cohort_abr_sig %>%
finalfit(dependent, explanatory, method = "glm", family = "binomial") -> logreg_model
plot <- or_plot(.data = cohort_abr_sig,
dependent = "had_HSA",
explanatory = c(    "age_at_final_date_GB",
"sex",
"median_weight_5y_prior_endpoint_any_records_kg_outliers_removed_biological",
"prior5y_activity_mode",
"all_cancers_YN_no_HSA",
"NSAID_5y_quantiles",
"gastrointestinal"))
plot2 <-cohort_abr_sig %>%
or_plot(dependent, explanatory,column_space = c(-0.5, -0.1, 0.5),table_text_size = 3, plot_opts = list(xlim(0, 14)))
plot2
print(plot2)
plot2 <-cohort_abr_sig %>%
or_plot(dependent, explanatory,column_space = c(-0.5, -0.1, 0.5),table_text_size = 3, plot_opts = list(xlim(0, 3)))
plot2
print(plot2)
dependent <- "had_HSA"
explanatory <- c(   "age_at_final_date_GB",
"sex",
"median_weight_5y_prior_endpoint_any_records_kg_outliers_removed_biological",
"prior5y_activity_mode",
"all_cancers_YN_no_HSA",
"NSAID_5y_quantiles",
"gastrointestinal")
final_model_table <-cohort_abr_sig %>%
finalfit(dependent, explanatory, metrics = TRUE,column=TRUE) %>%
kable(format = "html", digits = 2, escape = FALSE) %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover"))
final_model_table
final_model_table2<- cohort_abr_sig %>%
finalfit(dependent, explanatory, metrics = FALSE,column = TRUE)
final_model_table2_df <- as.data.frame(final_model_table2)
results_flextable <-flextable(final_model_table2_df)
#recode into tidier variables
#seperate df for recoding to avoid overwriting orignal df
df <-cohort_abr_sig
#relabel from 0/1 Q1-Q4 etc
df <- df %>%
mutate(
all_cancers_YN_no_HSA= recode(as.character(all_cancers_YN_no_HSA),
"0" = "No other cancer reported",
"1" = "Other cancer reported")
)
df <- df %>%
mutate(all_cancers_YN_no_HSA = factor(all_cancers_YN_no_HSA,levels=c(
"No other cancer reported","Other cancer reported"
)))
#GI comorb
df <- df %>%
mutate(
gastrointestinal = recode(as.character(gastrointestinal),
"0" = "GI comorb not present",
"1" = "GI comorb present")
)
df <- df %>%
mutate(gastrointestinal = factor(gastrointestinal,levels=c(
"GI comorb not present","GI comorb present"
)))
#NSAID ever
df <- df %>%
mutate(
NSAID_5y_quantiles = recode(as.character(NSAID_5y_quantiles),
"no_NSAID_admin" = "NSAID not administered",
"Q1(1)" = "1 time",
"Q2(1-2)" = "2 times",
"Q3(2-3)"="3 times",
"Q4(3-11)" ="4-11 times",
"no_med_use_recorded"="No medical records in time period")
)
df <- df %>%
mutate(NSAID_5y_quantiles = factor(NSAID_5y_quantiles,levels=c(
"NSAID not administered","1 time","2 times","3 times","4-11 times","No medical records in time period"
)))
#frequency activity quartile
df <- df %>%
mutate(
prior5y_activity_mode = recode(as.character(prior5y_activity_model),
"little" = "Little",
"moderate" = "Moderate",
"very active" = "Very active",
"not_recorded" = "Not recorded"
),
prior5y_activity_mode = factor(
prior5y_activity_mode,
levels = c(
"Little","Moderate","Very active",
"Not recorded"
)
)
)
df <- df %>%
mutate(
prior5y_activity_mode = recode(as.character(prior5y_activity_mode),
"little" = "Little",
"moderate" = "Moderate",
"very active" = "Very active",
"not_recorded" = "Not recorded"
),
prior5y_activity_mode = factor(
prior5y_activity_mode,
levels = c(
"Little","Moderate","Very active",
"Not recorded"
)
)
)
#remove univar
final_df <-df%>%
finalfit(dependent, explanatory)
View(final_df)
#final_df <- final_df %>%
# rename('variable'=`Dependent: survival_time_group`)%>%
#dplyr::select(-c('OR (univariable)')) %>%
#dplyr::select(-c('0'))%>%
# dplyr::select(-c('1'))
final_df <- final_df %>%
rename('variable'=`Dependent: had_HSA`)%>%
dplyr::select(-c('OR (univariable)'))
#replace all - with 1(1-1)
final_df$`OR (multivariable)`[#replace all - with 1(1-1)
final_df $`OR (multivariable)` == "-"] <- "1(1-1, p<0.001)"
#extracting values with regex
final_df$estimate <- gsub("([0-9.]+)\\s*\\([0-9.-]+-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\1", final_df$`OR (multivariable)`)
final_df$conf.low <- gsub("([0-9.]+)\\s*\\(([0-9.-]+)-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\2", final_df$`OR (multivariable)`)
final_df$conf.high <- gsub("([0-9.]+)\\s*\\([0-9.-]+-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\2",  final_df$`OR (multivariable)`)
final_df$p.value <- gsub(".*p[=<]*([0-9.]+).*", "\\1", final_df$`OR (multivariable)`)
colnames(final_df)[2] <- "category"
final_df <- final_df %>%
rename(OR_CI = 'OR (multivariable)')
final_df <- final_df %>%
rename(Cases = '1')
final_df <- final_df %>%
rename(Controls = '0')
#For index for plotting
final_df$AutoNumber <- seq_along(final_df[[1]])
#rename 1(1-1) to reference
final_df$OR_CI[#replace all - with 1(1-1)
final_df$OR_CI == "1(1-1, p<0.001)"] <- "Reference"
final_df[12, 2] <- "Weight not recorded"
final_df[11,2]<-">35kg"
final_df[7,2] <- "Female"
final_df[8,2]<- "Male"
final_df[1, 1] <- "Age at final date (Barry)"
final_df[7, 1] <- "Sex"
final_df[9, 1] <- "Median adult weight 5y prior to endpoint (biological)"
final_df[13,1] <- "Mode activity level 5y prior to endpoint"
#renaming variables for figure
final_df[12, 2] <- "Weight not recorded"
final_df[11,2]<-">35kg"
final_df[7,2] <- "Female"
final_df[8,2]<- "Male"
final_df[1, 1] <- "Age at final date (Barry)"
final_df[7, 1] <- "Sex"
final_df[13,1] <- "Mode activity level 5y prior to endpoint"
final_df[9, 1] <- "Median adult weight 5y prior to endpoint (biological)"
final_df[17,1] <- "Cancer recorded 5y prior to endpoint"
final_df[19, 1] <- "Gastrointestinal comorbidity 5y prior to endpoint"
final_df[22, 1] <- "NSAID usage - 5y prior to endpoint (quartiles)"
#remove univar
final_df <-df%>%
finalfit(dependent, explanatory)
#final_df <- final_df %>%
# rename('variable'=`Dependent: survival_time_group`)%>%
#dplyr::select(-c('OR (univariable)')) %>%
#dplyr::select(-c('0'))%>%
# dplyr::select(-c('1'))
final_df <- final_df %>%
rename('variable'=`Dependent: had_HSA`)%>%
dplyr::select(-c('OR (univariable)'))
#replace all - with 1(1-1)
final_df$`OR (multivariable)`[#replace all - with 1(1-1)
final_df $`OR (multivariable)` == "-"] <- "1(1-1, p<0.001)"
#extracting values with regex
final_df$estimate <- gsub("([0-9.]+)\\s*\\([0-9.-]+-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\1", final_df$`OR (multivariable)`)
final_df$conf.low <- gsub("([0-9.]+)\\s*\\(([0-9.-]+)-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\2", final_df$`OR (multivariable)`)
final_df$conf.high <- gsub("([0-9.]+)\\s*\\([0-9.-]+-([0-9.-]+),\\s*p[=<]*([0-9.]+).*\\)", "\\2",  final_df$`OR (multivariable)`)
final_df$p.value <- gsub(".*p[=<]*([0-9.]+).*", "\\1", final_df$`OR (multivariable)`)
colnames(final_df)[2] <- "category"
final_df <- final_df %>%
rename(OR_CI = 'OR (multivariable)')
final_df <- final_df %>%
rename(Cases = '1')
final_df <- final_df %>%
rename(Controls = '0')
#For index for plotting
final_df$AutoNumber <- seq_along(final_df[[1]])
#rename 1(1-1) to reference
final_df$OR_CI[#replace all - with 1(1-1)
final_df$OR_CI == "1(1-1, p<0.001)"] <- "Reference"
#renaming variables for figure
final_df[12, 2] <- "Weight not recorded"
final_df[11,2]<-">35kg"
final_df[7,2] <- "Female"
final_df[8,2]<- "Male"
final_df[1, 1] <- "Age at final date (Barry)"
final_df[7, 1] <- "Sex"
final_df[13,1] <- "Mode activity level 5y prior to endpoint"
final_df[9, 1] <- "Median adult weight 5y prior to endpoint (biological)"
final_df[17,1] <- "Cancer recorded 5y prior to endpoint"
final_df[25, 1] <- "Gastrointestinal comorbidity 5y prior to endpoint"
final_df[19, 1] <- "NSAID usage - 5y prior to endpoint (quartiles)"
final_df$category
final_df[16,6] <- 0
final_df[16,7] <- 0
final_df[16,8]<-0
final_df$category <- factor(final_df$category,
levels = c(">7-<9y","<5y",">5-<7y",">9-<11y",">11-<13y",">13y","Female","Male",">15-<=25kg",">25-<=35kg",">35kg","Weight not recorded","Little","Moderate","Very active","Not recorded","No other cancer reported","Other cancer reported", "NSAID not administered", "1 time","2 times","3 times","4-11 times", "No medical records in time period",
"GI comorb not present", "GI comorb present"))
final_df$AutoNumber <- factor(final_df$AutoNumber,
levels = c("1","2","3","4","5","6","7","8","9","10","11","12",
"13","14","15","16","17","18","19","20","21","22","23","24","25","26"))
final_df$conf.high <- as.numeric(final_df$conf.high)
final_df$conf.low <- as.numeric(final_df$conf.low)
final_df$estimate <- as.numeric(final_df$estimate)
p_mid <-
final_df |>
ggplot(aes(y = fct_rev(AutoNumber))) +
theme_classic() +
geom_point(aes(x = estimate), shape = 15, size = 5) +
geom_linerange(aes(xmin = conf.low, xmax = conf.high)) +
labs(x = "Odds Ratio") +
coord_cartesian(ylim = c(1, 26), xlim = c(0, 4)) +
geom_vline(xintercept = 1, linetype = "dashed") +
theme(
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank()
)
p_mid
# Left plot with more spaced columns and adjusted xlim
p_left <-
final_df |>
ggplot(aes(y = fct_rev(AutoNumber))) +
geom_text(aes(x = 0, label = variable), hjust = 0, size = 4, fontface = "bold") +
geom_text(aes(x = 25, label = category), hjust = 0, fontface = "bold", size = 3.5) +
geom_text(aes(x = 45, label = Controls), hjust = 0, fontface = "bold", size = 3.5)+
geom_text(aes(x = 50, label = Cases), hjust = 0, fontface = "bold", size = 3.5)+
geom_text(aes(x = 60, label = OR_CI), hjust = 0,
fontface = ifelse(final_df$OR_CI == "Odds Ratio (95% CI)", "bold", "plain"),
size = 3.5) +
theme_void() +
coord_cartesian(xlim = c(0, 80))  # Allows room for three text columns
layout2 <- c(
patchwork::area(t = 0, l = 0, b = 30, r = 9),  # Make p_left wider# top, left, bottom, right
patchwork::area(t = 1, l = 9, b = 30, r = 15)    # p_mid occupies a smaller part
)
forest_log <- p_left + p_mid + plot_layout(design = layout2)
library(ggplot2)
library(patchwork)
library(forcats)
layout2 <- c(
patchwork::area(t = 0, l = 0, b = 30, r = 9),  # Make p_left wider# top, left, bottom, right
patchwork::area(t = 1, l = 9, b = 30, r = 15)    # p_mid occupies a smaller part
)
# Combine plots with adjusted layout
forest_log <- p_left + p_mid + plot_layout(design = layout2)
forest_log
layout2 <- c(
patchwork::area(t = 0, l = 0, b = 30, r = 9),  # Make p_left wider# top, left, bottom, right
patchwork::area(t = 1, l = 12, b = 30, r = 20)    # p_mid occupies a smaller part
)
# Combine plots with adjusted layout
forest_log <- p_left + p_mid + plot_layout(design = layout2)
forest_log
layout2 <- c(
patchwork::area(t = 0, l = 0, b = 30, r = 15),  # Make p_left wider# top, left, bottom, right
patchwork::area(t = 1, l = 15, b = 30, r = 20)    # p_mid occupies a smaller part
)
# Combine plots with adjusted layout
forest_log <- p_left + p_mid + plot_layout(design = layout2)
forest_log
ggsave("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/logreg_forestplot_casecontrol_numbers_v2.pdf", plot = forest_log, width = 25, height = 15, dpi = 300)
ggsave("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/logreg_forestplot_v2.pdf", plot = forest_log, width = 15, height = 15, dpi = 300)
ggsave("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/logreg_forestplot_v2.pdf", plot = forest_log, width = 20, height = 10, dpi = 300)
ggsave("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/logreg_forestplot_v2.svg", plot = forest_log, width = 20, height = 10, dpi = 300)
ggsave("C:/Users/ctaylor18/GitHub/GRLS_analyses/Output/logreg_forestplot_v2.tif", plot = forest_log, width = 20, height = 10, dpi = 300)
library(tidyverse)
denom_2019 <- read.csv("C:/Users/ctaylor18/OneDrive - Royal Veterinary College/phd/year 3/EPI WORK/2019 denom/220420 2019 denom UTD/220113Dog2019DemogMetadata.csv")
from_VC_coding <-read.csv("C:/Users/ctaylor18/GitHub/VC melanoma/GH_Melanoma_in_VC_2019_(Duplicated_Thu (3).csv")
View(from_VC_coding)
from_VC_coding <-read.csv("C:/Users/ctaylor18/GitHub/VC melanoma/GH_Melanoma_in_VC_2019_(Duplicated_Thu (3).csv")
candidate_cases <-read.csv("C:/Users/ctaylor18/GitHub/VC melanoma/PatientList_36439_StudyListReport.csv")
cases <-read.csv("C:/Users/ctaylor18/GitHub/VC melanoma/GH_Melanoma_in_VC_2019_(Duplicated_Thu (3).csv")
case_IDs <- unique(cases$PatientID)
candidate_case_IDs <- unique(candidate_cases$PatientID)
candidate_cases_with_cases_removed <- setdiff(candidate_case_IDs, case_IDs)
denom_2019_candidates_removed<- denom_2019 %>% filter(!PatientID %in% candidate_cases_with_cases_removed)
denom_2019 <- denom_2019 %>%
rename(PatientID=PatientId)
denom_2019_candidates_removed<- denom_2019 %>% filter(!PatientID %in% candidate_cases_with_cases_removed)
denom_2019_candidates_removed <- denom_2019_candidates_removed %>%
mutate(melanocytic_tumour = if_else(PatientID %in% case_IDs, 1, 0))
table(denom_2019_candidates_removed$melanocytic_tumour)
cases_to_keep <- denom_2019_candidates_removed %>%
filter(melanocytic_tumour ==1)
denom_2019_candidates_removed_no_cases <- denom_2019_candidates_removed %>%
filter(melanocytic_tumour==0)
set.seed(123)
sampled_IDs <- sample(unique(denom_2019_candidates_removed_no_cases$PatientID), size = 100000)
denom_2019_candidates_removed_no_cases_100k <- denom_2019_candidates_removed_no_cases %>% filter(PatientID %in% sampled_IDs)
denom_2019_candidates_removed_100k <- rbind(denom_2019_candidates_removed_no_cases_100k,cases_to_keep)
write.csv(denom_2019_candidates_removed_100k,"C:/Users/ctaylor18/GitHub/VC melanoma/VC_GH_melanoma_study_100k_2019_denom_and_cases.csv")
View(denom_2019_candidates_removed_100k)
